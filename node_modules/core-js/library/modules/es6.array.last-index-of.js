'use strict';
var $e***REMOVED***port = require('./_e***REMOVED***port');
var toIObject = require('./_to-iobject');
var toInteger = require('./_to-integer');
var toLength = require('./_to-length');
var $native = [].lastInde***REMOVED***Of;
var NEGATIVE_ZERO = !!$native && 1 / [1].lastInde***REMOVED***Of(1, -0) < 0;

$e***REMOVED***port($e***REMOVED***port.P + $e***REMOVED***port.F * (NEGATIVE_ZERO || !require('./_strict-method')($native)), 'Array', {
  // 22.1.3.14 / 15.4.4.15 Array.prototype.lastInde***REMOVED***Of(searchElement [, fromInde***REMOVED***])
  lastInde***REMOVED***Of: function lastInde***REMOVED***Of(searchElement /* , fromInde***REMOVED*** = @[*-1] */) {
    // convert -0 to +0
    if (NEGATIVE_ZERO) return $native.apply(this, arguments) || 0;
    var O = toIObject(this);
    var length = toLength(O.length);
    var inde***REMOVED*** = length - 1;
    if (arguments.length > 1) inde***REMOVED*** = Math.min(inde***REMOVED***, toInteger(arguments[1]));
    if (inde***REMOVED*** < 0) inde***REMOVED*** = length + inde***REMOVED***;
    for (;inde***REMOVED*** >= 0; inde***REMOVED***--) if (inde***REMOVED*** in O) if (O[inde***REMOVED***] === searchElement) return inde***REMOVED*** || 0;
    return -1;
  }
});
