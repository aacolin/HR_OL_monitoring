var aFunction = require('./_a-function');
var toObject = require('./_to-object');
var IObject = require('./_iobject');
var toLength = require('./_to-length');

module.e***REMOVED***ports = function (that, callbackfn, aLen, memo, isRight) {
  aFunction(callbackfn);
  var O = toObject(that);
  var self = IObject(O);
  var length = toLength(O.length);
  var inde***REMOVED*** = isRight ? length - 1 : 0;
  var i = isRight ? -1 : 1;
  if (aLen < 2) for (;;) {
    if (inde***REMOVED*** in self) {
      memo = self[inde***REMOVED***];
      inde***REMOVED*** += i;
      break;
    }
    inde***REMOVED*** += i;
    if (isRight ? inde***REMOVED*** < 0 : length <= inde***REMOVED***) {
      throw TypeError('Reduce of empty array with no initial value');
    }
  }
  for (;isRight ? inde***REMOVED*** >= 0 : length > inde***REMOVED***; inde***REMOVED*** += i) if (inde***REMOVED*** in self) {
    memo = callbackfn(memo, self[inde***REMOVED***], inde***REMOVED***, O);
  }
  return memo;
};
