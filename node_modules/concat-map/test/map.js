var concatMap = require('../');
var test = require('tape');

test('empty or not', function (t) {
    var ***REMOVED***s = [ 1, 2, 3, 4, 5, 6 ];
    var i***REMOVED***es = [];
    var ys = concatMap(***REMOVED***s, function (***REMOVED***, i***REMOVED***) {
        i***REMOVED***es.push(i***REMOVED***);
        return ***REMOVED*** % 2 ? [ ***REMOVED*** - 0.1, ***REMOVED***, ***REMOVED*** + 0.1 ] : [];
    });
    t.same(ys, [ 0.9, 1, 1.1, 2.9, 3, 3.1, 4.9, 5, 5.1 ]);
    t.same(i***REMOVED***es, [ 0, 1, 2, 3, 4, 5 ]);
    t.end();
});

test('always something', function (t) {
    var ***REMOVED***s = [ 'a', 'b', 'c', 'd' ];
    var ys = concatMap(***REMOVED***s, function (***REMOVED***) {
        return ***REMOVED*** === 'b' ? [ 'B', 'B', 'B' ] : [ ***REMOVED*** ];
    });
    t.same(ys, [ 'a', 'B', 'B', 'B', 'c', 'd' ]);
    t.end();
});

test('scalars', function (t) {
    var ***REMOVED***s = [ 'a', 'b', 'c', 'd' ];
    var ys = concatMap(***REMOVED***s, function (***REMOVED***) {
        return ***REMOVED*** === 'b' ? [ 'B', 'B', 'B' ] : ***REMOVED***;
    });
    t.same(ys, [ 'a', 'B', 'B', 'B', 'c', 'd' ]);
    t.end();
});

test('undefs', function (t) {
    var ***REMOVED***s = [ 'a', 'b', 'c', 'd' ];
    var ys = concatMap(***REMOVED***s, function () {});
    t.same(ys, [ undefined, undefined, undefined, undefined ]);
    t.end();
});
