module.e***REMOVED***ports = command;

/**
 * command constructs the e***REMOVED***ecutable command to run in a shell including the
 * user script, the command arguments.
 *
 * @param  {Object} settings Object as:
 *                           { e***REMOVED***ecOptions: {
 *                               e***REMOVED***ec: String,
 *                               [script: String],
 *                               [scriptPosition: Number],
 *                               [e***REMOVED***ecArgs: Array<string>]
 *                             }
 *                           }
 * @return {Object}          an object with the node e***REMOVED***ecutable and the
 *                           arguments to the command
 */
function command(settings) {
  var options = settings.e***REMOVED***ecOptions;
  var e***REMOVED***ecutable = options.e***REMOVED***ec;
  var args = [];

  // after "e***REMOVED***ecutable" go the e***REMOVED***ec args (like --debug, etc)
  if (options.e***REMOVED***ecArgs) {
    [].push.apply(args, options.e***REMOVED***ecArgs);
  }

  // then goes the user's script arguments
  if (options.args) {
    [].push.apply(args, options.args);
  }

  // after the "e***REMOVED***ecutable" goes the user's script
  if (options.script) {
    args.splice((options.scriptPosition || 0) +
      options.e***REMOVED***ecArgs.length, 0, options.script);
  }

  return {
    e***REMOVED***ecutable: e***REMOVED***ecutable,
    args: args,
  };
}
