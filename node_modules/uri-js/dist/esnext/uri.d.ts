e***REMOVED***port interface URIComponents {
    scheme?: string;
    userinfo?: string;
    host?: string;
    port?: number | string;
    path?: string;
    query?: string;
    fragment?: string;
    reference?: string;
    error?: string;
}
e***REMOVED***port interface URIOptions {
    scheme?: string;
    reference?: string;
    tolerant?: boolean;
    absolutePath?: boolean;
    iri?: boolean;
    unicodeSupport?: boolean;
    domainHost?: boolean;
}
e***REMOVED***port interface URISchemeHandler<Components e***REMOVED***tends URIComponents = URIComponents, Options e***REMOVED***tends URIOptions = URIOptions, ParentComponents e***REMOVED***tends URIComponents = URIComponents> {
    scheme: string;
    parse(components: ParentComponents, options: Options): Components;
    serialize(components: Components, options: Options): ParentComponents;
    unicodeSupport?: boolean;
    domainHost?: boolean;
    absolutePath?: boolean;
}
e***REMOVED***port interface URIRegE***REMOVED***ps {
    NOT_SCHEME: RegE***REMOVED***p;
    NOT_USERINFO: RegE***REMOVED***p;
    NOT_HOST: RegE***REMOVED***p;
    NOT_PATH: RegE***REMOVED***p;
    NOT_PATH_NOSCHEME: RegE***REMOVED***p;
    NOT_QUERY: RegE***REMOVED***p;
    NOT_FRAGMENT: RegE***REMOVED***p;
    ESCAPE: RegE***REMOVED***p;
    UNRESERVED: RegE***REMOVED***p;
    OTHER_CHARS: RegE***REMOVED***p;
    PCT_ENCODED: RegE***REMOVED***p;
    IPV4ADDRESS: RegE***REMOVED***p;
    IPV6ADDRESS: RegE***REMOVED***p;
}
e***REMOVED***port declare const SCHEMES: {
    [scheme: string]: URISchemeHandler;
};
e***REMOVED***port declare function pctEncChar(chr: string): string;
e***REMOVED***port declare function pctDecChars(str: string): string;
e***REMOVED***port declare function parse(uriString: string, options?: URIOptions): URIComponents;
e***REMOVED***port declare function removeDotSegments(input: string): string;
e***REMOVED***port declare function serialize(components: URIComponents, options?: URIOptions): string;
e***REMOVED***port declare function resolveComponents(base: URIComponents, relative: URIComponents, options?: URIOptions, skipNormalization?: boolean): URIComponents;
e***REMOVED***port declare function resolve(baseURI: string, relativeURI: string, options?: URIOptions): string;
e***REMOVED***port declare function normalize(uri: string, options?: URIOptions): string;
e***REMOVED***port declare function normalize(uri: URIComponents, options?: URIOptions): URIComponents;
e***REMOVED***port declare function equal(uriA: string, uriB: string, options?: URIOptions): boolean;
e***REMOVED***port declare function equal(uriA: URIComponents, uriB: URIComponents, options?: URIOptions): boolean;
e***REMOVED***port declare function escapeComponent(str: string, options?: URIOptions): string;
e***REMOVED***port declare function unescapeComponent(str: string, options?: URIOptions): string;
