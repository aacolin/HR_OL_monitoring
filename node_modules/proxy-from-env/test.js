/* eslint ma***REMOVED***-statements:0 */
'use strict';

var assert = require('assert');
var parseUrl = require('url').parse;

var getPro***REMOVED***yForUrl = require('./').getPro***REMOVED***yForUrl;

// Runs the callback with process.env temporarily set to env.
function runWithEnv(env, callback) {
  var originalEnv = process.env;
  process.env = env;
  try {
    callback();
  } finally {
    process.env = originalEnv;
  }
}

// Defines a test case that checks whether getPro***REMOVED***yForUrl(input) === e***REMOVED***pected.
function testPro***REMOVED***yUrl(env, e***REMOVED***pected, input) {
  assert(typeof env === 'object' && env !== null);
  // Copy object to make sure that the in param does not get modified between
  // the call of this function and the use of it below.
  env = JSON.parse(JSON.stringify(env));

  var title = 'getPro***REMOVED***yForUrl(' + JSON.stringify(input) + ')' +
     ' === ' + JSON.stringify(e***REMOVED***pected);

  // Save call stack for later use.
  var stack = {};
  Error.captureStackTrace(stack, testPro***REMOVED***yUrl);
  // Only use the last stack frame because that shows where this function is
  // called, and that is sufficient for our purpose. No need to flood the logs
  // with an uninteresting stack trace.
  stack = stack.stack.split('\n', 2)[1];

  it(title, function() {
    var actual;
    runWithEnv(env, function() {
      actual = getPro***REMOVED***yForUrl(input);
    });
    if (e***REMOVED***pected === actual) {
      return;  // Good!
    }
    try {
      assert.strictEqual(e***REMOVED***pected, actual); // Create a formatted error message.
      // Should not happen because previously we determined e***REMOVED***pected !== actual.
      throw new Error('assert.strictEqual passed. This is impossible!');
    } catch (e) {
      // Use the original stack trace, so we can see a helpful line number.
      e.stack = e.message + stack;
      throw e;
    }
  });
}

describe('getPro***REMOVED***yForUrl', function() {
  describe('No pro***REMOVED***y variables', function() {
    var env = {};
    testPro***REMOVED***yUrl(env, '', 'http://e***REMOVED***ample.com');
    testPro***REMOVED***yUrl(env, '', 'https://e***REMOVED***ample.com');
    testPro***REMOVED***yUrl(env, '', 'ftp://e***REMOVED***ample.com');
  });

  describe('Invalid URLs', function() {
    var env = {};
    env.ALL_PROXY = 'http://une***REMOVED***pected.pro***REMOVED***y';
    testPro***REMOVED***yUrl(env, '', 'bogus');
    testPro***REMOVED***yUrl(env, '', '//e***REMOVED***ample.com');
    testPro***REMOVED***yUrl(env, '', '://e***REMOVED***ample.com');
    testPro***REMOVED***yUrl(env, '', '://');
    testPro***REMOVED***yUrl(env, '', '/path');
    testPro***REMOVED***yUrl(env, '', '');
    testPro***REMOVED***yUrl(env, '', 'http:');
    testPro***REMOVED***yUrl(env, '', 'http:/');
    testPro***REMOVED***yUrl(env, '', 'http://');
    testPro***REMOVED***yUrl(env, '', 'prototype://');
    testPro***REMOVED***yUrl(env, '', 'hasOwnProperty://');
    testPro***REMOVED***yUrl(env, '', '__proto__://');
    testPro***REMOVED***yUrl(env, '', undefined);
    testPro***REMOVED***yUrl(env, '', null);
    testPro***REMOVED***yUrl(env, '', {});
    testPro***REMOVED***yUrl(env, '', {host: '***REMOVED***', protocol: 1});
    testPro***REMOVED***yUrl(env, '', {host: 1, protocol: '***REMOVED***'});
  });

  describe('http_pro***REMOVED***y and HTTP_PROXY', function() {
    var env = {};
    env.HTTP_PROXY = 'http://http-pro***REMOVED***y';

    testPro***REMOVED***yUrl(env, '', 'https://e***REMOVED***ample');
    testPro***REMOVED***yUrl(env, 'http://http-pro***REMOVED***y', 'http://e***REMOVED***ample');
    testPro***REMOVED***yUrl(env, 'http://http-pro***REMOVED***y', parseUrl('http://e***REMOVED***ample'));

    // eslint-disable-ne***REMOVED***t-line camelcase
    env.http_pro***REMOVED***y = 'http://priority';
    testPro***REMOVED***yUrl(env, 'http://priority', 'http://e***REMOVED***ample');
  });

  describe('http_pro***REMOVED***y with non-sensical value', function() {
    var env = {};
    // Crazy values should be passed as-is. It is the responsibility of the
    // one who launches the application that the value makes sense.
    // TODO: Should we be stricter and perform validation?
    env.HTTP_PROXY = 'Crazy \n!() { ::// }';
    testPro***REMOVED***yUrl(env, 'Crazy \n!() { ::// }', 'http://wow');

    // The implementation assumes that the HTTP_PROXY environment variable is
    // somewhat reasonable, and if the scheme is missing, it is added.
    // Garbage in, garbage out some would say...
    env.HTTP_PROXY = 'crazy without colon slash slash';
    testPro***REMOVED***yUrl(env, 'http://crazy without colon slash slash', 'http://wow');
  });

  describe('https_pro***REMOVED***y and HTTPS_PROXY', function() {
    var env = {};
    // Assert that there is no fall back to http_pro***REMOVED***y
    env.HTTP_PROXY = 'http://une***REMOVED***pected.pro***REMOVED***y';
    testPro***REMOVED***yUrl(env, '', 'https://e***REMOVED***ample');

    env.HTTPS_PROXY = 'http://https-pro***REMOVED***y';
    testPro***REMOVED***yUrl(env, 'http://https-pro***REMOVED***y', 'https://e***REMOVED***ample');

    // eslint-disable-ne***REMOVED***t-line camelcase
    env.https_pro***REMOVED***y = 'http://priority';
    testPro***REMOVED***yUrl(env, 'http://priority', 'https://e***REMOVED***ample');
  });

  describe('ftp_pro***REMOVED***y', function() {
    var env = {};
    // Something else than http_pro***REMOVED***y / https, as a sanity check.
    env.FTP_PROXY = 'http://ftp-pro***REMOVED***y';

    testPro***REMOVED***yUrl(env, 'http://ftp-pro***REMOVED***y', 'ftp://e***REMOVED***ample');
    testPro***REMOVED***yUrl(env, '', 'ftps://e***REMOVED***ample');
  });

  describe('all_pro***REMOVED***y', function() {
    var env = {};
    env.ALL_PROXY = 'http://catch-all';
    testPro***REMOVED***yUrl(env, 'http://catch-all', 'https://e***REMOVED***ample');

    // eslint-disable-ne***REMOVED***t-line camelcase
    env.all_pro***REMOVED***y = 'http://priority';
    testPro***REMOVED***yUrl(env, 'http://priority', 'https://e***REMOVED***ample');
  });

  describe('all_pro***REMOVED***y without scheme', function() {
    var env = {};
    env.ALL_PROXY = 'noscheme';
    testPro***REMOVED***yUrl(env, 'http://noscheme', 'http://e***REMOVED***ample');
    testPro***REMOVED***yUrl(env, 'https://noscheme', 'https://e***REMOVED***ample');

    // The module does not impose restrictions on the scheme.
    testPro***REMOVED***yUrl(env, 'bogus-scheme://noscheme', 'bogus-scheme://e***REMOVED***ample');

    // But the URL should still be valid.
    testPro***REMOVED***yUrl(env, '', 'bogus');
  });

  describe('no_pro***REMOVED***y empty', function() {
    var env = {};
    env.HTTPS_PROXY = 'http://pro***REMOVED***y';

    // NO_PROXY set but empty.
    env.NO_PROXY = '';
    testPro***REMOVED***yUrl(env, 'http://pro***REMOVED***y', 'https://e***REMOVED***ample');

    // No entries in NO_PROXY (comma).
    env.NO_PROXY = ',';
    testPro***REMOVED***yUrl(env, 'http://pro***REMOVED***y', 'https://e***REMOVED***ample');

    // No entries in NO_PROXY (whitespace).
    env.NO_PROXY = ' ';
    testPro***REMOVED***yUrl(env, 'http://pro***REMOVED***y', 'https://e***REMOVED***ample');

    // No entries in NO_PROXY (multiple whitespace / commas).
    env.NO_PROXY = ',\t,,,\n,  ,\r';
    testPro***REMOVED***yUrl(env, 'http://pro***REMOVED***y', 'https://e***REMOVED***ample');
  });

  describe('no_pro***REMOVED***y=e***REMOVED***ample (single host)', function() {
    var env = {};
    env.HTTP_PROXY = 'http://pro***REMOVED***y';

    env.NO_PROXY = 'e***REMOVED***ample';
    testPro***REMOVED***yUrl(env, '', 'http://e***REMOVED***ample');
    testPro***REMOVED***yUrl(env, '', 'http://e***REMOVED***ample:80');
    testPro***REMOVED***yUrl(env, '', 'http://e***REMOVED***ample:0');
    testPro***REMOVED***yUrl(env, '', 'http://e***REMOVED***ample:1337');
    testPro***REMOVED***yUrl(env, 'http://pro***REMOVED***y', 'http://sub.e***REMOVED***ample');
    testPro***REMOVED***yUrl(env, 'http://pro***REMOVED***y', 'http://prefe***REMOVED***ample');
    testPro***REMOVED***yUrl(env, 'http://pro***REMOVED***y', 'http://e***REMOVED***ample.no');
    testPro***REMOVED***yUrl(env, 'http://pro***REMOVED***y', 'http://a.b.e***REMOVED***ample');
    testPro***REMOVED***yUrl(env, 'http://pro***REMOVED***y', 'http://host/e***REMOVED***ample');
  });

  describe('no_pro***REMOVED***y=sub.e***REMOVED***ample (subdomain)', function() {
    var env = {};
    env.HTTP_PROXY = 'http://pro***REMOVED***y';

    env.NO_PROXY = 'sub.e***REMOVED***ample';
    testPro***REMOVED***yUrl(env, 'http://pro***REMOVED***y', 'http://e***REMOVED***ample');
    testPro***REMOVED***yUrl(env, 'http://pro***REMOVED***y', 'http://e***REMOVED***ample:80');
    testPro***REMOVED***yUrl(env, 'http://pro***REMOVED***y', 'http://e***REMOVED***ample:0');
    testPro***REMOVED***yUrl(env, 'http://pro***REMOVED***y', 'http://e***REMOVED***ample:1337');
    testPro***REMOVED***yUrl(env, '', 'http://sub.e***REMOVED***ample');
    testPro***REMOVED***yUrl(env, 'http://pro***REMOVED***y', 'http://no.sub.e***REMOVED***ample');
    testPro***REMOVED***yUrl(env, 'http://pro***REMOVED***y', 'http://sub-e***REMOVED***ample');
    testPro***REMOVED***yUrl(env, 'http://pro***REMOVED***y', 'http://e***REMOVED***ample.sub');
  });

  describe('no_pro***REMOVED***y=e***REMOVED***ample:80 (host + port)', function() {
    var env = {};
    env.HTTP_PROXY = 'http://pro***REMOVED***y';

    env.NO_PROXY = 'e***REMOVED***ample:80';
    testPro***REMOVED***yUrl(env, '', 'http://e***REMOVED***ample');
    testPro***REMOVED***yUrl(env, '', 'http://e***REMOVED***ample:80');
    testPro***REMOVED***yUrl(env, '', 'http://e***REMOVED***ample:0');
    testPro***REMOVED***yUrl(env, 'http://pro***REMOVED***y', 'http://e***REMOVED***ample:1337');
    testPro***REMOVED***yUrl(env, 'http://pro***REMOVED***y', 'http://sub.e***REMOVED***ample');
    testPro***REMOVED***yUrl(env, 'http://pro***REMOVED***y', 'http://prefe***REMOVED***ample');
    testPro***REMOVED***yUrl(env, 'http://pro***REMOVED***y', 'http://e***REMOVED***ample.no');
    testPro***REMOVED***yUrl(env, 'http://pro***REMOVED***y', 'http://a.b.e***REMOVED***ample');
  });

  describe('no_pro***REMOVED***y=.e***REMOVED***ample (host suffi***REMOVED***)', function() {
    var env = {};
    env.HTTP_PROXY = 'http://pro***REMOVED***y';

    env.NO_PROXY = '.e***REMOVED***ample';
    testPro***REMOVED***yUrl(env, 'http://pro***REMOVED***y', 'http://e***REMOVED***ample');
    testPro***REMOVED***yUrl(env, 'http://pro***REMOVED***y', 'http://e***REMOVED***ample:80');
    testPro***REMOVED***yUrl(env, 'http://pro***REMOVED***y', 'http://e***REMOVED***ample:1337');
    testPro***REMOVED***yUrl(env, '', 'http://sub.e***REMOVED***ample');
    testPro***REMOVED***yUrl(env, '', 'http://sub.e***REMOVED***ample:80');
    testPro***REMOVED***yUrl(env, '', 'http://sub.e***REMOVED***ample:1337');
    testPro***REMOVED***yUrl(env, 'http://pro***REMOVED***y', 'http://prefe***REMOVED***ample');
    testPro***REMOVED***yUrl(env, 'http://pro***REMOVED***y', 'http://e***REMOVED***ample.no');
    testPro***REMOVED***yUrl(env, '', 'http://a.b.e***REMOVED***ample');
  });

  describe('no_pro***REMOVED***y=*', function() {
    var env = {};
    env.HTTP_PROXY = 'http://pro***REMOVED***y';
    env.NO_PROXY = '*';
    testPro***REMOVED***yUrl(env, '', 'http://e***REMOVED***ample.com');
  });

  describe('no_pro***REMOVED***y=*.e***REMOVED***ample (host suffi***REMOVED*** with *.)', function() {
    var env = {};
    env.HTTP_PROXY = 'http://pro***REMOVED***y';

    env.NO_PROXY = '*.e***REMOVED***ample';
    testPro***REMOVED***yUrl(env, 'http://pro***REMOVED***y', 'http://e***REMOVED***ample');
    testPro***REMOVED***yUrl(env, 'http://pro***REMOVED***y', 'http://e***REMOVED***ample:80');
    testPro***REMOVED***yUrl(env, 'http://pro***REMOVED***y', 'http://e***REMOVED***ample:1337');
    testPro***REMOVED***yUrl(env, '', 'http://sub.e***REMOVED***ample');
    testPro***REMOVED***yUrl(env, '', 'http://sub.e***REMOVED***ample:80');
    testPro***REMOVED***yUrl(env, '', 'http://sub.e***REMOVED***ample:1337');
    testPro***REMOVED***yUrl(env, 'http://pro***REMOVED***y', 'http://prefe***REMOVED***ample');
    testPro***REMOVED***yUrl(env, 'http://pro***REMOVED***y', 'http://e***REMOVED***ample.no');
    testPro***REMOVED***yUrl(env, '', 'http://a.b.e***REMOVED***ample');
  });

  describe('no_pro***REMOVED***y=*e***REMOVED***ample (substring suffi***REMOVED***)', function() {
    var env = {};
    env.HTTP_PROXY = 'http://pro***REMOVED***y';

    env.NO_PROXY = '*e***REMOVED***ample';
    testPro***REMOVED***yUrl(env, '', 'http://e***REMOVED***ample');
    testPro***REMOVED***yUrl(env, '', 'http://e***REMOVED***ample:80');
    testPro***REMOVED***yUrl(env, '', 'http://e***REMOVED***ample:1337');
    testPro***REMOVED***yUrl(env, '', 'http://sub.e***REMOVED***ample');
    testPro***REMOVED***yUrl(env, '', 'http://sub.e***REMOVED***ample:80');
    testPro***REMOVED***yUrl(env, '', 'http://sub.e***REMOVED***ample:1337');
    testPro***REMOVED***yUrl(env, '', 'http://prefe***REMOVED***ample');
    testPro***REMOVED***yUrl(env, '', 'http://a.b.e***REMOVED***ample');
    testPro***REMOVED***yUrl(env, 'http://pro***REMOVED***y', 'http://e***REMOVED***ample.no');
    testPro***REMOVED***yUrl(env, 'http://pro***REMOVED***y', 'http://host/e***REMOVED***ample');
  });

  describe('no_pro***REMOVED***y=.*e***REMOVED***ample (arbitrary wildcards are NOT supported)',
      function() {
    var env = {};
    env.HTTP_PROXY = 'http://pro***REMOVED***y';

    env.NO_PROXY = '.*e***REMOVED***ample';
    testPro***REMOVED***yUrl(env, 'http://pro***REMOVED***y', 'http://e***REMOVED***ample');
    testPro***REMOVED***yUrl(env, 'http://pro***REMOVED***y', 'http://sub.e***REMOVED***ample');
    testPro***REMOVED***yUrl(env, 'http://pro***REMOVED***y', 'http://sub.e***REMOVED***ample');
    testPro***REMOVED***yUrl(env, 'http://pro***REMOVED***y', 'http://prefe***REMOVED***ample');
    testPro***REMOVED***yUrl(env, 'http://pro***REMOVED***y', 'http://***REMOVED***.prefe***REMOVED***ample');
    testPro***REMOVED***yUrl(env, 'http://pro***REMOVED***y', 'http://a.b.e***REMOVED***ample');
  });

  describe('no_pro***REMOVED***y=[::1],[::2]:80,10.0.0.1,10.0.0.2:80 (IP addresses)',
      function() {
    var env = {};
    env.HTTP_PROXY = 'http://pro***REMOVED***y';

    env.NO_PROXY = '[::1],[::2]:80,10.0.0.1,10.0.0.2:80';
    testPro***REMOVED***yUrl(env, '', 'http://[::1]/');
    testPro***REMOVED***yUrl(env, '', 'http://[::1]:80/');
    testPro***REMOVED***yUrl(env, '', 'http://[::1]:1337/');

    testPro***REMOVED***yUrl(env, '', 'http://[::2]/');
    testPro***REMOVED***yUrl(env, '', 'http://[::2]:80/');
    testPro***REMOVED***yUrl(env, 'http://pro***REMOVED***y', 'http://[::2]:1337/');

    testPro***REMOVED***yUrl(env, '', 'http://10.0.0.1/');
    testPro***REMOVED***yUrl(env, '', 'http://10.0.0.1:80/');
    testPro***REMOVED***yUrl(env, '', 'http://10.0.0.1:1337/');

    testPro***REMOVED***yUrl(env, '', 'http://10.0.0.2/');
    testPro***REMOVED***yUrl(env, '', 'http://10.0.0.2:80/');
    testPro***REMOVED***yUrl(env, 'http://pro***REMOVED***y', 'http://10.0.0.2:1337/');
  });

  describe('no_pro***REMOVED***y=127.0.0.1/32 (CIDR is NOT supported)', function() {
    var env = {};
    env.HTTP_PROXY = 'http://pro***REMOVED***y';

    env.NO_PROXY = '127.0.0.1/32';
    testPro***REMOVED***yUrl(env, 'http://pro***REMOVED***y', 'http://127.0.0.1');
    testPro***REMOVED***yUrl(env, 'http://pro***REMOVED***y', 'http://127.0.0.1/32');
  });

  describe('no_pro***REMOVED***y=127.0.0.1 does NOT match localhost', function() {
    var env = {};
    env.HTTP_PROXY = 'http://pro***REMOVED***y';

    env.NO_PROXY = '127.0.0.1';
    testPro***REMOVED***yUrl(env, '', 'http://127.0.0.1');
    // We're not performing DNS queries, so this shouldn't match.
    testPro***REMOVED***yUrl(env, 'http://pro***REMOVED***y', 'http://localhost');
  });

  describe('no_pro***REMOVED***y with protocols that have a default port', function() {
    var env = {};
    env.WS_PROXY = 'http://ws';
    env.WSS_PROXY = 'http://wss';
    env.HTTP_PROXY = 'http://http';
    env.HTTPS_PROXY = 'http://https';
    env.GOPHER_PROXY = 'http://gopher';
    env.FTP_PROXY = 'http://ftp';
    env.ALL_PROXY = 'http://all';

    env.NO_PROXY = '***REMOVED******REMOVED******REMOVED***:21,***REMOVED******REMOVED******REMOVED***:70,***REMOVED******REMOVED******REMOVED***:80,***REMOVED******REMOVED******REMOVED***:443';

    testPro***REMOVED***yUrl(env, '', 'http://***REMOVED******REMOVED******REMOVED***');
    testPro***REMOVED***yUrl(env, '', 'http://***REMOVED******REMOVED******REMOVED***:80');
    testPro***REMOVED***yUrl(env, 'http://http', 'http://***REMOVED******REMOVED******REMOVED***:1337');

    testPro***REMOVED***yUrl(env, '', 'ws://***REMOVED******REMOVED******REMOVED***');
    testPro***REMOVED***yUrl(env, '', 'ws://***REMOVED******REMOVED******REMOVED***:80');
    testPro***REMOVED***yUrl(env, 'http://ws', 'ws://***REMOVED******REMOVED******REMOVED***:1337');

    testPro***REMOVED***yUrl(env, '', 'https://***REMOVED******REMOVED******REMOVED***');
    testPro***REMOVED***yUrl(env, '', 'https://***REMOVED******REMOVED******REMOVED***:443');
    testPro***REMOVED***yUrl(env, 'http://https', 'https://***REMOVED******REMOVED******REMOVED***:1337');

    testPro***REMOVED***yUrl(env, '', 'wss://***REMOVED******REMOVED******REMOVED***');
    testPro***REMOVED***yUrl(env, '', 'wss://***REMOVED******REMOVED******REMOVED***:443');
    testPro***REMOVED***yUrl(env, 'http://wss', 'wss://***REMOVED******REMOVED******REMOVED***:1337');

    testPro***REMOVED***yUrl(env, '', 'gopher://***REMOVED******REMOVED******REMOVED***');
    testPro***REMOVED***yUrl(env, '', 'gopher://***REMOVED******REMOVED******REMOVED***:70');
    testPro***REMOVED***yUrl(env, 'http://gopher', 'gopher://***REMOVED******REMOVED******REMOVED***:1337');

    testPro***REMOVED***yUrl(env, '', 'ftp://***REMOVED******REMOVED******REMOVED***');
    testPro***REMOVED***yUrl(env, '', 'ftp://***REMOVED******REMOVED******REMOVED***:21');
    testPro***REMOVED***yUrl(env, 'http://ftp', 'ftp://***REMOVED******REMOVED******REMOVED***:1337');
  });

  describe('no_pro***REMOVED***y should not be case-sensitive', function() {
    var env = {};
    env.HTTP_PROXY = 'http://pro***REMOVED***y';
    env.NO_PROXY = 'XXX,YYY,ZzZ';

    testPro***REMOVED***yUrl(env, '', 'http://***REMOVED******REMOVED******REMOVED***');
    testPro***REMOVED***yUrl(env, '', 'http://XXX');
    testPro***REMOVED***yUrl(env, '', 'http://yyy');
    testPro***REMOVED***yUrl(env, '', 'http://YYY');
    testPro***REMOVED***yUrl(env, '', 'http://ZzZ');
    testPro***REMOVED***yUrl(env, '', 'http://zZz');
  });

  describe('NPM pro***REMOVED***y configuration', function() {
    describe('npm_config_http_pro***REMOVED***y should work', function() {
      var env = {};
      // eslint-disable-ne***REMOVED***t-line camelcase
      env.npm_config_http_pro***REMOVED***y = 'http://http-pro***REMOVED***y';

      testPro***REMOVED***yUrl(env, '', 'https://e***REMOVED***ample');
      testPro***REMOVED***yUrl(env, 'http://http-pro***REMOVED***y', 'http://e***REMOVED***ample');

      // eslint-disable-ne***REMOVED***t-line camelcase
      env.npm_config_http_pro***REMOVED***y = 'http://priority';
      testPro***REMOVED***yUrl(env, 'http://priority', 'http://e***REMOVED***ample');
    });
    // eslint-disable-ne***REMOVED***t-line ma***REMOVED***-len
    describe('npm_config_http_pro***REMOVED***y should take precedence over HTTP_PROXY and npm_config_pro***REMOVED***y', function() {
      var env = {};
      // eslint-disable-ne***REMOVED***t-line camelcase
      env.npm_config_http_pro***REMOVED***y = 'http://http-pro***REMOVED***y';
      // eslint-disable-ne***REMOVED***t-line camelcase
      env.npm_config_pro***REMOVED***y = 'http://une***REMOVED***pected-pro***REMOVED***y';
      env.HTTP_PROXY = 'http://une***REMOVED***pected-pro***REMOVED***y';

      testPro***REMOVED***yUrl(env, 'http://http-pro***REMOVED***y', 'http://e***REMOVED***ample');
    });
    describe('npm_config_https_pro***REMOVED***y should work', function() {
      var env = {};
      // eslint-disable-ne***REMOVED***t-line camelcase
      env.npm_config_http_pro***REMOVED***y = 'http://une***REMOVED***pected.pro***REMOVED***y';
      testPro***REMOVED***yUrl(env, '', 'https://e***REMOVED***ample');

      // eslint-disable-ne***REMOVED***t-line camelcase
      env.npm_config_https_pro***REMOVED***y = 'http://https-pro***REMOVED***y';
      testPro***REMOVED***yUrl(env, 'http://https-pro***REMOVED***y', 'https://e***REMOVED***ample');

      // eslint-disable-ne***REMOVED***t-line camelcase
      env.npm_config_https_pro***REMOVED***y = 'http://priority';
      testPro***REMOVED***yUrl(env, 'http://priority', 'https://e***REMOVED***ample');
    });
    // eslint-disable-ne***REMOVED***t-line ma***REMOVED***-len
    describe('npm_config_https_pro***REMOVED***y should take precedence over HTTPS_PROXY and npm_config_pro***REMOVED***y', function() {
      var env = {};
      // eslint-disable-ne***REMOVED***t-line camelcase
      env.npm_config_https_pro***REMOVED***y = 'http://https-pro***REMOVED***y';
      // eslint-disable-ne***REMOVED***t-line camelcase
      env.npm_config_pro***REMOVED***y = 'http://une***REMOVED***pected-pro***REMOVED***y';
      env.HTTPS_PROXY = 'http://une***REMOVED***pected-pro***REMOVED***y';

      testPro***REMOVED***yUrl(env, 'http://https-pro***REMOVED***y', 'https://e***REMOVED***ample');
    });
    describe('npm_config_pro***REMOVED***y should work', function() {
      var env = {};
      // eslint-disable-ne***REMOVED***t-line camelcase
      env.npm_config_pro***REMOVED***y = 'http://http-pro***REMOVED***y';
      testPro***REMOVED***yUrl(env, 'http://http-pro***REMOVED***y', 'http://e***REMOVED***ample');
      testPro***REMOVED***yUrl(env, 'http://http-pro***REMOVED***y', 'https://e***REMOVED***ample');

      // eslint-disable-ne***REMOVED***t-line camelcase
      env.npm_config_pro***REMOVED***y = 'http://priority';
      testPro***REMOVED***yUrl(env, 'http://priority', 'http://e***REMOVED***ample');
      testPro***REMOVED***yUrl(env, 'http://priority', 'https://e***REMOVED***ample');
    });
    // eslint-disable-ne***REMOVED***t-line ma***REMOVED***-len
    describe('HTTP_PROXY and HTTPS_PROXY should take precedence over npm_config_pro***REMOVED***y', function() {
      var env = {};
      env.HTTP_PROXY = 'http://http-pro***REMOVED***y';
      env.HTTPS_PROXY = 'http://https-pro***REMOVED***y';
      // eslint-disable-ne***REMOVED***t-line camelcase
      env.npm_config_pro***REMOVED***y = 'http://une***REMOVED***pected-pro***REMOVED***y';
      testPro***REMOVED***yUrl(env, 'http://http-pro***REMOVED***y', 'http://e***REMOVED***ample');
      testPro***REMOVED***yUrl(env, 'http://https-pro***REMOVED***y', 'https://e***REMOVED***ample');
    });
    describe('npm_config_no_pro***REMOVED***y should work', function() {
      var env = {};
      env.HTTP_PROXY = 'http://pro***REMOVED***y';
      // eslint-disable-ne***REMOVED***t-line camelcase
      env.npm_config_no_pro***REMOVED***y = 'e***REMOVED***ample';

      testPro***REMOVED***yUrl(env, '', 'http://e***REMOVED***ample');
      testPro***REMOVED***yUrl(env, 'http://pro***REMOVED***y', 'http://otherwebsite');
    });
    // eslint-disable-ne***REMOVED***t-line ma***REMOVED***-len
    describe('npm_config_no_pro***REMOVED***y should take precedence over NO_PROXY', function() {
      var env = {};
      env.HTTP_PROXY = 'http://pro***REMOVED***y';
      env.NO_PROXY = 'otherwebsite';
      // eslint-disable-ne***REMOVED***t-line camelcase
      env.npm_config_no_pro***REMOVED***y = 'e***REMOVED***ample';

      testPro***REMOVED***yUrl(env, '', 'http://e***REMOVED***ample');
      testPro***REMOVED***yUrl(env, 'http://pro***REMOVED***y', 'http://otherwebsite');
    });
  });
});
