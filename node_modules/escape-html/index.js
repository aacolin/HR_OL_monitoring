/*!
 * escape-html
 * Copyright(c) 2012-2013 TJ Holowaychuk
 * Copyright(c) 2015 Andreas Lubbe
 * Copyright(c) 2015 Tiancheng "Timothy" Gu
 * MIT Licensed
 */

'use strict';

/**
 * Module variables.
 * @private
 */

var matchHtmlRegE***REMOVED***p = /["'&<>]/;

/**
 * Module e***REMOVED***ports.
 * @public
 */

module.e***REMOVED***ports = escapeHtml;

/**
 * Escape special characters in the given string of html.
 *
 * @param  {string} string The string to escape for inserting into HTML
 * @return {string}
 * @public
 */

function escapeHtml(string) {
  var str = '' + string;
  var match = matchHtmlRegE***REMOVED***p.e***REMOVED***ec(str);

  if (!match) {
    return str;
  }

  var escape;
  var html = '';
  var inde***REMOVED*** = 0;
  var lastInde***REMOVED*** = 0;

  for (inde***REMOVED*** = match.inde***REMOVED***; inde***REMOVED*** < str.length; inde***REMOVED***++) {
    switch (str.charCodeAt(inde***REMOVED***)) {
      case 34: // "
        escape = '&quot;';
        break;
      case 38: // &
        escape = '&amp;';
        break;
      case 39: // '
        escape = '&#39;';
        break;
      case 60: // <
        escape = '&lt;';
        break;
      case 62: // >
        escape = '&gt;';
        break;
      default:
        continue;
    }

    if (lastInde***REMOVED*** !== inde***REMOVED***) {
      html += str.substring(lastInde***REMOVED***, inde***REMOVED***);
    }

    lastInde***REMOVED*** = inde***REMOVED*** + 1;
    html += escape;
  }

  return lastInde***REMOVED*** !== inde***REMOVED***
    ? html + str.substring(lastInde***REMOVED***, inde***REMOVED***)
    : html;
}
