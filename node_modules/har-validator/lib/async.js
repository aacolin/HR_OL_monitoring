var Ajv = require('ajv')
var HARError = require('./error')
var schemas = require('har-schema')

var ajv

function createAjvInstance () {
  var ajv = new Ajv({
    allErrors: true
  })
  ajv.addMetaSchema(require('ajv/lib/refs/json-schema-draft-06.json'))
  ajv.addSchema(schemas)

  return ajv
}

function validate (name, data, ne***REMOVED***t) {
  data = data || {}

  // validator config
  ajv = ajv || createAjvInstance()

  var validate = ajv.getSchema(name + '.json')

  var valid = validate(data)

  // callback?
  if (typeof ne***REMOVED***t === 'function') {
    return ne***REMOVED***t(!valid ? new HARError(validate.errors) : null, valid)
  }

  return valid
}

e***REMOVED***ports.afterRequest = function (data, ne***REMOVED***t) {
  return validate('afterRequest', data, ne***REMOVED***t)
}

e***REMOVED***ports.beforeRequest = function (data, ne***REMOVED***t) {
  return validate('beforeRequest', data, ne***REMOVED***t)
}

e***REMOVED***ports.browser = function (data, ne***REMOVED***t) {
  return validate('browser', data, ne***REMOVED***t)
}

e***REMOVED***ports.cache = function (data, ne***REMOVED***t) {
  return validate('cache', data, ne***REMOVED***t)
}

e***REMOVED***ports.content = function (data, ne***REMOVED***t) {
  return validate('content', data, ne***REMOVED***t)
}

e***REMOVED***ports.cookie = function (data, ne***REMOVED***t) {
  return validate('cookie', data, ne***REMOVED***t)
}

e***REMOVED***ports.creator = function (data, ne***REMOVED***t) {
  return validate('creator', data, ne***REMOVED***t)
}

e***REMOVED***ports.entry = function (data, ne***REMOVED***t) {
  return validate('entry', data, ne***REMOVED***t)
}

e***REMOVED***ports.har = function (data, ne***REMOVED***t) {
  return validate('har', data, ne***REMOVED***t)
}

e***REMOVED***ports.header = function (data, ne***REMOVED***t) {
  return validate('header', data, ne***REMOVED***t)
}

e***REMOVED***ports.log = function (data, ne***REMOVED***t) {
  return validate('log', data, ne***REMOVED***t)
}

e***REMOVED***ports.page = function (data, ne***REMOVED***t) {
  return validate('page', data, ne***REMOVED***t)
}

e***REMOVED***ports.pageTimings = function (data, ne***REMOVED***t) {
  return validate('pageTimings', data, ne***REMOVED***t)
}

e***REMOVED***ports.postData = function (data, ne***REMOVED***t) {
  return validate('postData', data, ne***REMOVED***t)
}

e***REMOVED***ports.query = function (data, ne***REMOVED***t) {
  return validate('query', data, ne***REMOVED***t)
}

e***REMOVED***ports.request = function (data, ne***REMOVED***t) {
  return validate('request', data, ne***REMOVED***t)
}

e***REMOVED***ports.response = function (data, ne***REMOVED***t) {
  return validate('response', data, ne***REMOVED***t)
}

e***REMOVED***ports.timings = function (data, ne***REMOVED***t) {
  return validate('timings', data, ne***REMOVED***t)
}
