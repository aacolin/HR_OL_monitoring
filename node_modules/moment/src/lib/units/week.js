import { addFormatToken } from '../format/format';
import {
    addRege***REMOVED***Token,
    match1to2,
    match2,
    match1to2NoLeadingZero,
} from '../parse/rege***REMOVED***';
import { addWeekParseToken } from '../parse/token';
import toInt from '../utils/to-int';
import { weekOfYear } from './week-calendar-utils';

// FORMATTING

addFormatToken('w', ['ww', 2], 'wo', 'week');
addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');

// PARSING

addRege***REMOVED***Token('w', match1to2, match1to2NoLeadingZero);
addRege***REMOVED***Token('ww', match1to2, match2);
addRege***REMOVED***Token('W', match1to2, match1to2NoLeadingZero);
addRege***REMOVED***Token('WW', match1to2, match2);

addWeekParseToken(
    ['w', 'ww', 'W', 'WW'],
    function (input, week, config, token) {
        week[token.substr(0, 1)] = toInt(input);
    }
);

// HELPERS

// LOCALES

e***REMOVED***port function localeWeek(mom) {
    return weekOfYear(mom, this._week.dow, this._week.doy).week;
}

e***REMOVED***port var defaultLocaleWeek = {
    dow: 0, // Sunday is the first day of the week.
    doy: 6, // The week that contains Jan 6th is the first week of the year.
};

e***REMOVED***port function localeFirstDayOfWeek() {
    return this._week.dow;
}

e***REMOVED***port function localeFirstDayOfYear() {
    return this._week.doy;
}

// MOMENTS

e***REMOVED***port function getSetWeek(input) {
    var week = this.localeData().week(this);
    return input == null ? week : this.add((input - week) * 7, 'd');
}

e***REMOVED***port function getSetISOWeek(input) {
    var week = weekOfYear(this, 1, 4).week;
    return input == null ? week : this.add((input - week) * 7, 'd');
}
