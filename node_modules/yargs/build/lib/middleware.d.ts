import { YargsInstance, Arguments } from './yargs';
e***REMOVED***port declare function globalMiddlewareFactory<T>(globalMiddleware: Middleware[], conte***REMOVED***t: T): (callback: MiddlewareCallback | MiddlewareCallback[], applyBeforeValidation?: boolean) => T;
e***REMOVED***port declare function commandMiddlewareFactory(commandMiddleware?: MiddlewareCallback[]): Middleware[];
e***REMOVED***port declare function applyMiddleware(argv: Arguments | Promise<Arguments>, yargs: YargsInstance, middlewares: Middleware[], beforeValidation: boolean): Arguments | Promise<Arguments>;
e***REMOVED***port interface MiddlewareCallback {
    (argv: Arguments, yargs: YargsInstance): Partial<Arguments> | Promise<Partial<Arguments>>;
}
e***REMOVED***port interface Middleware e***REMOVED***tends MiddlewareCallback {
    applyBeforeValidation: boolean;
}
