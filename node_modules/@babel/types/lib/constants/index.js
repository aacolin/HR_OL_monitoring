"use strict";

Object.defineProperty(e***REMOVED***ports, "__esModule", {
  value: true
});
e***REMOVED***ports.UPDATE_OPERATORS = e***REMOVED***ports.UNARY_OPERATORS = e***REMOVED***ports.STRING_UNARY_OPERATORS = e***REMOVED***ports.STATEMENT_OR_BLOCK_KEYS = e***REMOVED***ports.NUMBER_UNARY_OPERATORS = e***REMOVED***ports.NUMBER_BINARY_OPERATORS = e***REMOVED***ports.NOT_LOCAL_BINDING = e***REMOVED***ports.LOGICAL_OPERATORS = e***REMOVED***ports.INHERIT_KEYS = e***REMOVED***ports.FOR_INIT_KEYS = e***REMOVED***ports.FLATTENABLE_KEYS = e***REMOVED***ports.EQUALITY_BINARY_OPERATORS = e***REMOVED***ports.COMPARISON_BINARY_OPERATORS = e***REMOVED***ports.COMMENT_KEYS = e***REMOVED***ports.BOOLEAN_UNARY_OPERATORS = e***REMOVED***ports.BOOLEAN_NUMBER_BINARY_OPERATORS = e***REMOVED***ports.BOOLEAN_BINARY_OPERATORS = e***REMOVED***ports.BLOCK_SCOPED_SYMBOL = e***REMOVED***ports.BINARY_OPERATORS = e***REMOVED***ports.ASSIGNMENT_OPERATORS = void 0;
const STATEMENT_OR_BLOCK_KEYS = e***REMOVED***ports.STATEMENT_OR_BLOCK_KEYS = ["consequent", "body", "alternate"];
const FLATTENABLE_KEYS = e***REMOVED***ports.FLATTENABLE_KEYS = ["body", "e***REMOVED***pressions"];
const FOR_INIT_KEYS = e***REMOVED***ports.FOR_INIT_KEYS = ["left", "init"];
const COMMENT_KEYS = e***REMOVED***ports.COMMENT_KEYS = ["leadingComments", "trailingComments", "innerComments"];
const LOGICAL_OPERATORS = e***REMOVED***ports.LOGICAL_OPERATORS = ["||", "&&", "??"];
const UPDATE_OPERATORS = e***REMOVED***ports.UPDATE_OPERATORS = ["++", "--"];
const BOOLEAN_NUMBER_BINARY_OPERATORS = e***REMOVED***ports.BOOLEAN_NUMBER_BINARY_OPERATORS = [">", "<", ">=", "<="];
const EQUALITY_BINARY_OPERATORS = e***REMOVED***ports.EQUALITY_BINARY_OPERATORS = ["==", "===", "!=", "!=="];
const COMPARISON_BINARY_OPERATORS = e***REMOVED***ports.COMPARISON_BINARY_OPERATORS = [...EQUALITY_BINARY_OPERATORS, "in", "instanceof"];
const BOOLEAN_BINARY_OPERATORS = e***REMOVED***ports.BOOLEAN_BINARY_OPERATORS = [...COMPARISON_BINARY_OPERATORS, ...BOOLEAN_NUMBER_BINARY_OPERATORS];
const NUMBER_BINARY_OPERATORS = e***REMOVED***ports.NUMBER_BINARY_OPERATORS = ["-", "/", "%", "*", "**", "&", "|", ">>", ">>>", "<<", "^"];
const BINARY_OPERATORS = e***REMOVED***ports.BINARY_OPERATORS = ["+", ...NUMBER_BINARY_OPERATORS, ...BOOLEAN_BINARY_OPERATORS, "|>"];
const ASSIGNMENT_OPERATORS = e***REMOVED***ports.ASSIGNMENT_OPERATORS = ["=", "+=", ...NUMBER_BINARY_OPERATORS.map(op => op + "="), ...LOGICAL_OPERATORS.map(op => op + "=")];
const BOOLEAN_UNARY_OPERATORS = e***REMOVED***ports.BOOLEAN_UNARY_OPERATORS = ["delete", "!"];
const NUMBER_UNARY_OPERATORS = e***REMOVED***ports.NUMBER_UNARY_OPERATORS = ["+", "-", "~"];
const STRING_UNARY_OPERATORS = e***REMOVED***ports.STRING_UNARY_OPERATORS = ["typeof"];
const UNARY_OPERATORS = e***REMOVED***ports.UNARY_OPERATORS = ["void", "throw", ...BOOLEAN_UNARY_OPERATORS, ...NUMBER_UNARY_OPERATORS, ...STRING_UNARY_OPERATORS];
const INHERIT_KEYS = e***REMOVED***ports.INHERIT_KEYS = {
  optional: ["typeAnnotation", "typeParameters", "returnType"],
  force: ["start", "loc", "end"]
};
const BLOCK_SCOPED_SYMBOL = e***REMOVED***ports.BLOCK_SCOPED_SYMBOL = Symbol.for("var used to be block scoped");
const NOT_LOCAL_BINDING = e***REMOVED***ports.NOT_LOCAL_BINDING = Symbol.for("should not be considered a local binding");

//# sourceMappingURL=inde***REMOVED***.js.map
