{"version":3,"names":["_gatherSequenceE***REMOVED***pressions","require","toSequenceE***REMOVED***pression","nodes","scope","length","declars","result","gatherSequenceE***REMOVED***pressions","declar","push"],"sources":["../../src/converters/toSequenceE***REMOVED***pression.ts"],"sourcesContent":["// TODO(Babel 8) Remove this file\nif (process.env.BABEL_8_BREAKING) {\n  throw new Error(\n    \"Internal Babel error: This file should only be loaded in Babel 7\",\n  );\n}\n\nimport gatherSequenceE***REMOVED***pressions from \"./gatherSequenceE***REMOVED***pressions.ts\";\nimport type * as t from \"../inde***REMOVED***.ts\";\nimport type { DeclarationInfo } from \"./gatherSequenceE***REMOVED***pressions.ts\";\n\n/**\n * Turn an array of statement `nodes` into a `SequenceE***REMOVED***pression`.\n *\n * Variable declarations are turned into simple assignments and their\n * declarations hoisted to the top of the current scope.\n *\n * E***REMOVED***pression statements are just resolved to their e***REMOVED***pression.\n */\ne***REMOVED***port default function toSequenceE***REMOVED***pression(\n  nodes: ReadonlyArray<t.Node>,\n  scope: any,\n): t.SequenceE***REMOVED***pression | undefined {\n  if (!nodes?.length) return;\n\n  const declars: DeclarationInfo[] = [];\n  const result = gatherSequenceE***REMOVED***pressions(nodes, declars);\n  if (!result) return;\n\n  for (const declar of declars) {\n    scope.push(declar);\n  }\n\n  // @ts-e***REMOVED***pect-error fi***REMOVED***me: gatherSequenceE***REMOVED***pressions will return an E***REMOVED***pression when there are only one element\n  return result;\n}\n"],"mappings":";;;;;;AAOA,IAAAA,0BAAA,GAAAC,OAAA;AAAuE;AAY***REMOVED***D,SAASC,oBAAoBA,CAC1CC,KAA4B,EAC5BC,KAAU,EACwB;EAClC,IAAI,EAACD,KAAK,YAALA,KAAK,CAAEE,MAAM,GAAE;EAEpB,MAAMC,OAA0B,GAAG,EAAE;EACrC,MAAMC,MAAM,GAAG,IAAAC,kCAAyB,EAACL,KAAK,EAAEG,OAAO,CAAC;EAC***REMOVED***D,IAAI,CAACC,MAAM,EAAE;EAEb,KAAK,MAAME,MAAM,IAAIH,OAAO,EAAE;IAC5BF,KAAK,CAACM,IAAI,CAACD,MAAM,CAAC;EACpB;EAGA,OAAOF,MAAM;AACf","ignoreList":[]}