{"version":3,"names":["_inde***REMOVED***","require","_default","e***REMOVED***ports","default","toE***REMOVED***pression","node","isE***REMOVED***pressionStatement","e***REMOVED***pression","isE***REMOVED***pression","isClass","type","isFunction","Error"],"sources":["../../src/converters/toE***REMOVED***pression.ts"],"sourcesContent":["import {\n  isE***REMOVED***pression,\n  isFunction,\n  isClass,\n  isE***REMOVED***pressionStatement,\n} from \"../validators/generated/inde***REMOVED***.ts\";\nimport type * as t from \"../inde***REMOVED***.ts\";\n\ne***REMOVED***port default toE***REMOVED***pression as {\n  (node: t.Function): t.FunctionE***REMOVED***pression;\n  (node: t.Class): t.ClassE***REMOVED***pression;\n  (\n    node: t.E***REMOVED***pressionStatement | t.E***REMOVED***pression | t.Class | t.Function,\n  ): t.E***REMOVED***pression;\n};\n\nfunction toE***REMOVED***pression(\n  node: t.E***REMOVED***pressionStatement | t.E***REMOVED***pression | t.Class | t.Function,\n): t.E***REMOVED***pression {\n  if (isE***REMOVED***pressionStatement(node)) {\n    node = node.e***REMOVED***pression;\n  }\n\n  // return unmodified node\n  // important for things like ArrowFunctions where\n  // type change from ArrowFunction to FunctionE***REMOVED***pression\n  // produces bugs like -> `()=>a` to `function () a`\n  // without generating a BlockStatement for it\n  // ref: https://github.com/babel/babili/issues/130\n  if (isE***REMOVED***pression(node)) {\n    return node;\n  }\n\n  // convert all classes and functions\n  // ClassDeclaration -> ClassE***REMOVED***pression\n  // FunctionDeclaration, ObjectMethod, ClassMethod -> FunctionE***REMOVED***pression\n  if (isClass(node)) {\n    // @ts-e***REMOVED***pect-error todo(flow->ts): avoid type unsafe mutations\n    node.type = \"ClassE***REMOVED***pression\";\n  } else if (isFunction(node)) {\n    // @ts-e***REMOVED***pect-error todo(flow->ts): avoid type unsafe mutations\n    node.type = \"FunctionE***REMOVED***pression\";\n  }\n\n  // if it's still not an e***REMOVED***pression\n  if (!isE***REMOVED***pression(node)) {\n    throw new Error(`cannot turn ${node.type} to an e***REMOVED***pression`);\n  }\n\n  return node;\n}\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AAK0C,IAAAC,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAG3BC,YAAY;AAQ3B,SAASA,YAAYA,CACnBC,IAAiE,EACnD;EACd,IAAI,IAAAC,4BAAqB,EAACD,IAAI,CAAC,EAAE;IAC/BA,IAAI,GAAGA,IAAI,CAACE,UAAU;EAC***REMOVED***B;EAQA,IAAI,IAAAC,mBAAY,EAACH,IAAI,CAAC,EAAE;IACtB,OAAOA,IAAI;EACb;EAKA,IAAI,IAAAI,cAAO,EAACJ,IAAI,CAAC,EAAE;IAEjBA,IAAI,CAACK,IAAI,GAAG,iBAAiB;EAC/B,CAAC,MAAM,IAAI,IAAAC,iBAAU,EAACN,IAAI,CAAC,EAAE;IAE3BA,IAAI,CAACK,IAAI,GAAG,oBAAoB;EAClC;EAGA,IAAI,CAAC,IAAAF,mBAAY,EAACH,IAAI,CAAC,EAAE;IACvB,MAAM,IAAIO,KAAK,CAAC,eAAeP,IAAI,CAACK,IAAI,mBAAmB,CAAC;EAC9D;EAEA,OAAOL,IAAI;AACb","ignoreList":[]}