{"version":3,"names":["_isValidIdentifier","require","_inde***REMOVED***","_default","e***REMOVED***ports","default","valueToNode","objectToString","Function","call","bind","Object","prototype","toString","isRegE***REMOVED***p","value","isPlainObject","proto","getPrototypeOf","undefined","identifier","booleanLiteral","nullLiteral","stringLiteral","result","Number","isFinite","numericLiteral","Math","abs","numerator","isNaN","binaryE***REMOVED***pression","is","unaryE***REMOVED***pression","pattern","source","flags","e***REMOVED***ec","regE***REMOVED***pLiteral","Array","isArray","arrayE***REMOVED***pression","map","props","key","keys","nodeKey","isValidIdentifier","push","objectProperty","objectE***REMOVED***pression","Error"],"sources":["../../src/converters/valueToNode.ts"],"sourcesContent":["import isValidIdentifier from \"../validators/isValidIdentifier.ts\";\nimport {\n  identifier,\n  booleanLiteral,\n  nullLiteral,\n  stringLiteral,\n  numericLiteral,\n  regE***REMOVED***pLiteral,\n  arrayE***REMOVED***pression,\n  objectProperty,\n  objectE***REMOVED***pression,\n  unaryE***REMOVED***pression,\n  binaryE***REMOVED***pression,\n} from \"../builders/generated/inde***REMOVED***.ts\";\nimport type * as t from \"../inde***REMOVED***.ts\";\n\ne***REMOVED***port default valueToNode as {\n  (value: undefined): t.Identifier; // TODO: This should return \"void 0\"\n  (value: boolean): t.BooleanLiteral;\n  (value: null): t.NullLiteral;\n  (value: string): t.StringLiteral;\n  // Infinities and NaN need to use a BinaryE***REMOVED***pression; negative values must be wrapped in UnaryE***REMOVED***pression\n  (value: number): t.NumericLiteral | t.BinaryE***REMOVED***pression | t.UnaryE***REMOVED***pression;\n  (value: RegE***REMOVED***p): t.RegE***REMOVED***pLiteral;\n  (value: ReadonlyArray<unknown>): t.ArrayE***REMOVED***pression;\n\n  // this throws with objects that are not plain objects,\n  // or if there are non-valueToNode-able values\n  (value: object): t.ObjectE***REMOVED***pression;\n\n  (value: unknown): t.E***REMOVED***pression;\n};\n\n// @ts-e***REMOVED***pect-error: Object.prototype.toString must return a string\nconst objectToString: (value: unknown) => string = Function.call.bind(\n  Object.prototype.toString,\n);\n\nfunction isRegE***REMOVED***p(value: unknown): value is RegE***REMOVED***p {\n  return objectToString(value) === \"[object RegE***REMOVED***p]\";\n}\n\nfunction isPlainObject(value: unknown): value is object {\n  if (\n    typeof value !== \"object\" ||\n    value === null ||\n    Object.prototype.toString.call(value) !== \"[object Object]\"\n  ) {\n    return false;\n  }\n  const proto = Object.getPrototypeOf(value);\n  // Object.prototype's __proto__ is null. Every other class's __proto__.__proto__ is\n  // not null by default. We cannot check if proto === Object.prototype because it\n  // could come from another realm.\n  return proto === null || Object.getPrototypeOf(proto) === null;\n}\n\nfunction valueToNode(value: unknown): t.E***REMOVED***pression {\n  // undefined\n  if (value === undefined) {\n    return identifier(\"undefined\");\n  }\n\n  // boolean\n  if (value === true || value === false) {\n    return booleanLiteral(value);\n  }\n\n  // null\n  if (value === null) {\n    return nullLiteral();\n  }\n\n  // strings\n  if (typeof value === \"string\") {\n    return stringLiteral(value);\n  }\n\n  // numbers\n  if (typeof value === \"number\") {\n    let result;\n    if (Number.isFinite(value)) {\n      result = numericLiteral(Math.abs(value));\n    } else {\n      let numerator;\n      if (Number.isNaN(value)) {\n        // NaN\n        numerator = numericLiteral(0);\n      } else {\n        // Infinity / -Infinity\n        numerator = numericLiteral(1);\n      }\n\n      result = binaryE***REMOVED***pression(\"/\", numerator, numericLiteral(0));\n    }\n\n    if (value < 0 || Object.is(value, -0)) {\n      result = unaryE***REMOVED***pression(\"-\", result);\n    }\n\n    return result;\n  }\n\n  // rege***REMOVED***es\n  if (isRegE***REMOVED***p(value)) {\n    const pattern = value.source;\n    const flags = /\\/([a-z]*)$/.e***REMOVED***ec(value.toString())[1];\n    return regE***REMOVED***pLiteral(pattern, flags);\n  }\n\n  // array\n  if (Array.isArray(value)) {\n    return arrayE***REMOVED***pression(value.map(valueToNode));\n  }\n\n  // object\n  if (isPlainObject(value)) {\n    const props = [];\n    for (const key of Object.keys(value)) {\n      let nodeKey;\n      if (isValidIdentifier(key)) {\n        nodeKey = identifier(key);\n      } else {\n        nodeKey = stringLiteral(key);\n      }\n      props.push(\n        objectProperty(\n          nodeKey,\n          valueToNode(\n            // @ts-e***REMOVED***pect-error key must present in value\n            value[key],\n          ),\n        ),\n      );\n    }\n    return objectE***REMOVED***pression(props);\n  }\n\n  throw new Error(\"don't know how to turn this value into a node\");\n}\n"],"mappings":";;;;;;AAAA,IAAAA,kBAAA,GAAAC,OAAA;AACA,IAAAC,MAAA,GAAAD,OAAA;AAYwC,IAAAE,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAGzBC,WAAW;AAkB1B,MAAMC,cAA0C,GAAGC,QAAQ,CAACC,IAAI,CAACC,IAAI,CACnEC,MAAM,CAACC,SAAS,CAACC,QACnB,CAAC;AAED,SAASC,QAAQA,CAACC,KAAc,EAAmB;EACjD,OAAOR,cAAc,CAACQ,KAAK,CAAC,KAAK,iBAAiB;AACpD;AAEA,SAASC,aAAaA,CAACD,KAAc,EAAmB;EACtD,IACE,OAAOA,KAAK,KAAK,QAAQ,IACzBA,KAAK,KAAK,IAAI,IACdJ,MAAM,CAACC,SAAS,CAACC,QAAQ,CAACJ,IAAI,CAACM,KAAK,CAAC,KAAK,iBAAiB,EAC3D;IACA,OAAO,KAAK;EACd;EACA,MAAME,KAAK,GAAGN,MAAM,CAACO,cAAc,CAACH,KAAK,CAAC;EAI1C,OAAOE,KAAK,KAAK,IAAI,IAAIN,MAAM,CAACO,cAAc,CAACD,KAAK,CAAC,KAAK,IAAI;AAChE;AAEA,SAASX,WAAWA,CAACS,KAAc,EAAgB;EAEjD,IAAIA,KAAK,KAAKI,SAAS,EAAE;IACvB,OAAO,IAAAC,iBAAU,EAAC,WAAW,CAAC;EAChC;EAGA,IAAIL,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAK,KAAK,EAAE;IACrC,OAAO,IAAAM,qBAAc,EAACN,KAAK,CAAC;EAC9B;EAGA,IAAIA,KAAK,KAAK,IAAI,EAAE;IAClB,OAAO,IAAAO,kBAAW,EAAC,CAAC;EACtB;EAGA,IAAI,OAAOP,KAAK,KAAK,QAAQ,EAAE;IAC7B,OAAO,IAAAQ,oBAAa,EAACR,KAAK,CAAC;EAC7B;EAGA,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;IAC7B,IAAIS,MAAM;IACV,IAAIC,MAAM,CAACC,QAAQ,CAACX,KAAK,CAAC,EAAE;MAC1BS,MAAM,GAAG,IAAAG,qBAAc,EAACC,IAAI,CAACC,GAAG,CAACd,KAAK,CAAC,CAAC;IAC1C,CAAC,MAAM;MACL,IAAIe,SAAS;MACb,IAAIL,MAAM,CAACM,KAAK,CAAChB,KAAK,CAAC,EAAE;QAEvBe,SAAS,GAAG,IAAAH,qBAAc,EAAC,CAAC,CAAC;MAC/B,CAAC,MAAM;QAELG,SAAS,GAAG,IAAAH,qBAAc,EAAC,CAAC,CAAC;MAC/B;MAEAH,MAAM,GAAG,IAAAQ,uBAAgB,EAAC,GAAG,EAAEF,SAAS,EAAE,IAAAH,qBAAc,EAAC,CAAC,CAAC,CAAC;IAC9D;IAEA,IAAIZ,KAAK,GAAG,CAAC,IAAIJ,MAAM,CAACsB,EAAE,CAAClB,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE;MACrCS,MAAM,GAAG,IAAAU,sBAAe,EAAC,GAAG,EAAEV,MAAM,CAAC;IACvC;IAEA,OAAOA,MAAM;EACf;EAGA,IAAIV,QAAQ,CAACC,KAAK,CAAC,EAAE;IACnB,MAAMoB,OAAO,GAAGpB,KAAK,CAACqB,MAAM;IAC5B,MAAMC,KAAK,GAAG,aAAa,CAACC,IAAI,CAACvB,KAAK,CAACF,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACrD,OAAO,IAAA0B,oBAAa,EAACJ,OAAO,EAAEE,KAAK,CAAC;EACtC;EAGA,IAAIG,KAAK,CAACC,OAAO,CAAC1B,KAAK,CAAC,EAAE;IAC***REMOVED***B,OAAO,IAAA2B,sBAAe,EAAC3B,KAAK,CAAC4B,GAAG,CAACrC,WAAW,CAAC,CAAC;EAChD;EAGA,IAAIU,aAAa,CAACD,KAAK,CAAC,EAAE;IAC***REMOVED***B,MAAM6B,KAAK,GAAG,EAAE;IAChB,KAAK,MAAMC,GAAG,IAAIlC,MAAM,CAACmC,IAAI,CAAC/B,KAAK,CAAC,EAAE;MACpC,IAAIgC,OAAO;MACX,IAAI,IAAAC,0BAAiB,EAACH,GAAG,CAAC,EAAE;QAC1BE,OAAO,GAAG,IAAA3B,iBAAU,EAACyB,GAAG,CAAC;MAC3B,CAAC,MAAM;QACLE,OAAO,GAAG,IAAA***REMOVED***B,oBAAa,EAACsB,GAAG,CAAC;MAC9B;MACAD,KAAK,CAACK,IAAI,CACR,IAAAC,qBAAc,EACZH,OAAO,EACPzC,WAAW,CAETS,KAAK,CAAC8B,GAAG,CACX,CACF,CACF,CAAC;IACH;IACA,OAAO,IAAAM,uBAAgB,EAACP,KAAK,CAAC;EAChC;EAEA,MAAM,IAAIQ,KAAK,CAAC,+CAA+C,CAAC;AAClE","ignoreList":[]}