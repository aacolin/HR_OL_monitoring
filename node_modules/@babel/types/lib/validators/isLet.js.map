{"version":3,"names":["_inde***REMOVED***","require","_inde***REMOVED***2","isLet","node","isVariableDeclaration","kind","BLOCK_SCOPED_SYMBOL"],"sources":["../../src/validators/isLet.ts"],"sourcesContent":["import { isVariableDeclaration } from \"./generated/inde***REMOVED***.ts\";\nimport { BLOCK_SCOPED_SYMBOL } from \"../constants/inde***REMOVED***.ts\";\nimport type * as t from \"../inde***REMOVED***.ts\";\n\n/**\n * Check if the input `node` is a `let` variable declaration.\n */\ne***REMOVED***port default function isLet(node: t.Node): boolean {\n  return (\n    isVariableDeclaration(node) &&\n    (node.kind !== \"var\" ||\n      // @ts-e***REMOVED***pect-error Fi***REMOVED***me: document private properties\n      node[BLOCK_SCOPED_SYMBOL])\n  );\n}\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AACA,IAAAC,OAAA,GAAAD,OAAA;AAMe,SAASE,KAAKA,CAACC,IAAY,EAAW;EACnD,OACE,IAAAC,4BAAqB,EAACD,IAAI,CAAC,KAC1BA,IAAI,CAACE,IAAI,KAAK,KAAK,IAElBF,IAAI,CAACG,2BAAmB,CAAC,CAAC;AAEhC","ignoreList":[]}