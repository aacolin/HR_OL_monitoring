"use strict";
Object.defineProperty(e***REMOVED***ports, "__esModule", { value: true });
e***REMOVED***ports.END = e***REMOVED***ports.CHANGE = e***REMOVED***ports.INIT = e***REMOVED***ports.MORE = e***REMOVED***ports.RESPONSE = e***REMOVED***ports.SERVER_HEARTBEAT_FAILED = e***REMOVED***ports.SERVER_HEARTBEAT_SUCCEEDED = e***REMOVED***ports.SERVER_HEARTBEAT_STARTED = e***REMOVED***ports.COMMAND_FAILED = e***REMOVED***ports.COMMAND_SUCCEEDED = e***REMOVED***ports.COMMAND_STARTED = e***REMOVED***ports.CLUSTER_TIME_RECEIVED = e***REMOVED***ports.CONNECTION_CHECKED_IN = e***REMOVED***ports.CONNECTION_CHECKED_OUT = e***REMOVED***ports.CONNECTION_CHECK_OUT_FAILED = e***REMOVED***ports.CONNECTION_CHECK_OUT_STARTED = e***REMOVED***ports.CONNECTION_CLOSED = e***REMOVED***ports.CONNECTION_READY = e***REMOVED***ports.CONNECTION_CREATED = e***REMOVED***ports.CONNECTION_POOL_READY = e***REMOVED***ports.CONNECTION_POOL_CLEARED = e***REMOVED***ports.CONNECTION_POOL_CLOSED = e***REMOVED***ports.CONNECTION_POOL_CREATED = e***REMOVED***ports.WAITING_FOR_SUITABLE_SERVER = e***REMOVED***ports.SERVER_SELECTION_SUCCEEDED = e***REMOVED***ports.SERVER_SELECTION_FAILED = e***REMOVED***ports.SERVER_SELECTION_STARTED = e***REMOVED***ports.TOPOLOGY_DESCRIPTION_CHANGED = e***REMOVED***ports.TOPOLOGY_CLOSED = e***REMOVED***ports.TOPOLOGY_OPENING = e***REMOVED***ports.SERVER_DESCRIPTION_CHANGED = e***REMOVED***ports.SERVER_CLOSED = e***REMOVED***ports.SERVER_OPENING = e***REMOVED***ports.DESCRIPTION_RECEIVED = e***REMOVED***ports.UNPINNED = e***REMOVED***ports.PINNED = e***REMOVED***ports.MESSAGE = e***REMOVED***ports.ENDED = e***REMOVED***ports.CLOSED = e***REMOVED***ports.CONNECT = e***REMOVED***ports.OPEN = e***REMOVED***ports.CLOSE = e***REMOVED***ports.TIMEOUT = e***REMOVED***ports.ERROR = e***REMOVED***ports.SYSTEM_JS_COLLECTION = e***REMOVED***ports.SYSTEM_COMMAND_COLLECTION = e***REMOVED***ports.SYSTEM_USER_COLLECTION = e***REMOVED***ports.SYSTEM_PROFILE_COLLECTION = e***REMOVED***ports.SYSTEM_INDEX_COLLECTION = e***REMOVED***ports.SYSTEM_NAMESPACE_COLLECTION = void 0;
e***REMOVED***ports.kDecoratedKeys = e***REMOVED***ports.kDecorateResult = e***REMOVED***ports.LEGACY_HELLO_COMMAND_CAMEL_CASE = e***REMOVED***ports.LEGACY_HELLO_COMMAND = e***REMOVED***ports.MONGO_CLIENT_EVENTS = e***REMOVED***ports.LOCAL_SERVER_EVENTS = e***REMOVED***ports.SERVER_RELAY_EVENTS = e***REMOVED***ports.APM_EVENTS = e***REMOVED***ports.TOPOLOGY_EVENTS = e***REMOVED***ports.CMAP_EVENTS = e***REMOVED***ports.HEARTBEAT_EVENTS = e***REMOVED***ports.RESUME_TOKEN_CHANGED = void 0;
/* eslint-disable @typescript-eslint/no-unnecessary-type-assertion */
e***REMOVED***ports.SYSTEM_NAMESPACE_COLLECTION = 'system.namespaces';
e***REMOVED***ports.SYSTEM_INDEX_COLLECTION = 'system.inde***REMOVED***es';
e***REMOVED***ports.SYSTEM_PROFILE_COLLECTION = 'system.profile';
e***REMOVED***ports.SYSTEM_USER_COLLECTION = 'system.users';
e***REMOVED***ports.SYSTEM_COMMAND_COLLECTION = '$cmd';
e***REMOVED***ports.SYSTEM_JS_COLLECTION = 'system.js';
// events
e***REMOVED***ports.ERROR = 'error';
e***REMOVED***ports.TIMEOUT = 'timeout';
e***REMOVED***ports.CLOSE = 'close';
e***REMOVED***ports.OPEN = 'open';
e***REMOVED***ports.CONNECT = 'connect';
e***REMOVED***ports.CLOSED = 'closed';
e***REMOVED***ports.ENDED = 'ended';
e***REMOVED***ports.MESSAGE = 'message';
e***REMOVED***ports.PINNED = 'pinned';
e***REMOVED***ports.UNPINNED = 'unpinned';
e***REMOVED***ports.DESCRIPTION_RECEIVED = 'descriptionReceived';
/** @internal */
e***REMOVED***ports.SERVER_OPENING = 'serverOpening';
/** @internal */
e***REMOVED***ports.SERVER_CLOSED = 'serverClosed';
/** @internal */
e***REMOVED***ports.SERVER_DESCRIPTION_CHANGED = 'serverDescriptionChanged';
/** @internal */
e***REMOVED***ports.TOPOLOGY_OPENING = 'topologyOpening';
/** @internal */
e***REMOVED***ports.TOPOLOGY_CLOSED = 'topologyClosed';
/** @internal */
e***REMOVED***ports.TOPOLOGY_DESCRIPTION_CHANGED = 'topologyDescriptionChanged';
/** @internal */
e***REMOVED***ports.SERVER_SELECTION_STARTED = 'serverSelectionStarted';
/** @internal */
e***REMOVED***ports.SERVER_SELECTION_FAILED = 'serverSelectionFailed';
/** @internal */
e***REMOVED***ports.SERVER_SELECTION_SUCCEEDED = 'serverSelectionSucceeded';
/** @internal */
e***REMOVED***ports.WAITING_FOR_SUITABLE_SERVER = 'waitingForSuitableServer';
/** @internal */
e***REMOVED***ports.CONNECTION_POOL_CREATED = 'connectionPoolCreated';
/** @internal */
e***REMOVED***ports.CONNECTION_POOL_CLOSED = 'connectionPoolClosed';
/** @internal */
e***REMOVED***ports.CONNECTION_POOL_CLEARED = 'connectionPoolCleared';
/** @internal */
e***REMOVED***ports.CONNECTION_POOL_READY = 'connectionPoolReady';
/** @internal */
e***REMOVED***ports.CONNECTION_CREATED = 'connectionCreated';
/** @internal */
e***REMOVED***ports.CONNECTION_READY = 'connectionReady';
/** @internal */
e***REMOVED***ports.CONNECTION_CLOSED = 'connectionClosed';
/** @internal */
e***REMOVED***ports.CONNECTION_CHECK_OUT_STARTED = 'connectionCheckOutStarted';
/** @internal */
e***REMOVED***ports.CONNECTION_CHECK_OUT_FAILED = 'connectionCheckOutFailed';
/** @internal */
e***REMOVED***ports.CONNECTION_CHECKED_OUT = 'connectionCheckedOut';
/** @internal */
e***REMOVED***ports.CONNECTION_CHECKED_IN = 'connectionCheckedIn';
e***REMOVED***ports.CLUSTER_TIME_RECEIVED = 'clusterTimeReceived';
/** @internal */
e***REMOVED***ports.COMMAND_STARTED = 'commandStarted';
/** @internal */
e***REMOVED***ports.COMMAND_SUCCEEDED = 'commandSucceeded';
/** @internal */
e***REMOVED***ports.COMMAND_FAILED = 'commandFailed';
/** @internal */
e***REMOVED***ports.SERVER_HEARTBEAT_STARTED = 'serverHeartbeatStarted';
/** @internal */
e***REMOVED***ports.SERVER_HEARTBEAT_SUCCEEDED = 'serverHeartbeatSucceeded';
/** @internal */
e***REMOVED***ports.SERVER_HEARTBEAT_FAILED = 'serverHeartbeatFailed';
e***REMOVED***ports.RESPONSE = 'response';
e***REMOVED***ports.MORE = 'more';
e***REMOVED***ports.INIT = 'init';
e***REMOVED***ports.CHANGE = 'change';
e***REMOVED***ports.END = 'end';
e***REMOVED***ports.RESUME_TOKEN_CHANGED = 'resumeTokenChanged';
/** @public */
e***REMOVED***ports.HEARTBEAT_EVENTS = Object.freeze([
    e***REMOVED***ports.SERVER_HEARTBEAT_STARTED,
    e***REMOVED***ports.SERVER_HEARTBEAT_SUCCEEDED,
    e***REMOVED***ports.SERVER_HEARTBEAT_FAILED
]);
/** @public */
e***REMOVED***ports.CMAP_EVENTS = Object.freeze([
    e***REMOVED***ports.CONNECTION_POOL_CREATED,
    e***REMOVED***ports.CONNECTION_POOL_READY,
    e***REMOVED***ports.CONNECTION_POOL_CLEARED,
    e***REMOVED***ports.CONNECTION_POOL_CLOSED,
    e***REMOVED***ports.CONNECTION_CREATED,
    e***REMOVED***ports.CONNECTION_READY,
    e***REMOVED***ports.CONNECTION_CLOSED,
    e***REMOVED***ports.CONNECTION_CHECK_OUT_STARTED,
    e***REMOVED***ports.CONNECTION_CHECK_OUT_FAILED,
    e***REMOVED***ports.CONNECTION_CHECKED_OUT,
    e***REMOVED***ports.CONNECTION_CHECKED_IN
]);
/** @public */
e***REMOVED***ports.TOPOLOGY_EVENTS = Object.freeze([
    e***REMOVED***ports.SERVER_OPENING,
    e***REMOVED***ports.SERVER_CLOSED,
    e***REMOVED***ports.SERVER_DESCRIPTION_CHANGED,
    e***REMOVED***ports.TOPOLOGY_OPENING,
    e***REMOVED***ports.TOPOLOGY_CLOSED,
    e***REMOVED***ports.TOPOLOGY_DESCRIPTION_CHANGED,
    e***REMOVED***ports.ERROR,
    e***REMOVED***ports.TIMEOUT,
    e***REMOVED***ports.CLOSE
]);
/** @public */
e***REMOVED***ports.APM_EVENTS = Object.freeze([
    e***REMOVED***ports.COMMAND_STARTED,
    e***REMOVED***ports.COMMAND_SUCCEEDED,
    e***REMOVED***ports.COMMAND_FAILED
]);
/**
 * All events that we relay to the `Topology`
 * @internal
 */
e***REMOVED***ports.SERVER_RELAY_EVENTS = Object.freeze([
    e***REMOVED***ports.SERVER_HEARTBEAT_STARTED,
    e***REMOVED***ports.SERVER_HEARTBEAT_SUCCEEDED,
    e***REMOVED***ports.SERVER_HEARTBEAT_FAILED,
    e***REMOVED***ports.COMMAND_STARTED,
    e***REMOVED***ports.COMMAND_SUCCEEDED,
    e***REMOVED***ports.COMMAND_FAILED,
    ...e***REMOVED***ports.CMAP_EVENTS
]);
/**
 * All events we listen to from `Server` instances, but do not forward to the client
 * @internal
 */
e***REMOVED***ports.LOCAL_SERVER_EVENTS = Object.freeze([
    e***REMOVED***ports.CONNECT,
    e***REMOVED***ports.DESCRIPTION_RECEIVED,
    e***REMOVED***ports.CLOSED,
    e***REMOVED***ports.ENDED
]);
/** @public */
e***REMOVED***ports.MONGO_CLIENT_EVENTS = Object.freeze([
    ...e***REMOVED***ports.CMAP_EVENTS,
    ...e***REMOVED***ports.APM_EVENTS,
    ...e***REMOVED***ports.TOPOLOGY_EVENTS,
    ...e***REMOVED***ports.HEARTBEAT_EVENTS
]);
/**
 * @internal
 * The legacy hello command that was deprecated in MongoDB 5.0.
 */
e***REMOVED***ports.LEGACY_HELLO_COMMAND = 'ismaster';
/**
 * @internal
 * The legacy hello command that was deprecated in MongoDB 5.0.
 */
e***REMOVED***ports.LEGACY_HELLO_COMMAND_CAMEL_CASE = 'isMaster';
// Typescript errors if we inde***REMOVED*** objects with `Symbol.for(...)`, so
// to avoid TS errors we pull them out into variables.  Then we can type
// the objects (and class) that we e***REMOVED***pect to see them on and prevent TS
// errors.
/** @internal */
e***REMOVED***ports.kDecorateResult = Symbol.for('@@mdb.decorateDecryptionResult');
/** @internal */
e***REMOVED***ports.kDecoratedKeys = Symbol.for('@@mdb.decryptedKeys');
//# sourceMappingURL=constants.js.map