"use strict";
Object.defineProperty(e***REMOVED***ports, "__esModule", { value: true });
e***REMOVED***ports.MongoServerSelectionError = e***REMOVED***ports.MongoServerError = e***REMOVED***ports.MongoServerClosedError = e***REMOVED***ports.MongoRuntimeError = e***REMOVED***ports.MongoParseError = e***REMOVED***ports.MongoOIDCError = e***REMOVED***ports.MongoNotConnectedError = e***REMOVED***ports.MongoNetworkTimeoutError = e***REMOVED***ports.MongoNetworkError = e***REMOVED***ports.MongoMissingDependencyError = e***REMOVED***ports.MongoMissingCredentialsError = e***REMOVED***ports.MongoKerberosError = e***REMOVED***ports.MongoInvalidArgumentError = e***REMOVED***ports.MongoGridFSStreamError = e***REMOVED***ports.MongoGridFSChunkError = e***REMOVED***ports.MongoGCPError = e***REMOVED***ports.MongoE***REMOVED***piredSessionError = e***REMOVED***ports.MongoError = e***REMOVED***ports.MongoDriverError = e***REMOVED***ports.MongoDecompressionError = e***REMOVED***ports.MongoCursorInUseError = e***REMOVED***ports.MongoCursorE***REMOVED***haustedError = e***REMOVED***ports.MongoCompatibilityError = e***REMOVED***ports.MongoClientBulkWriteE***REMOVED***ecutionError = e***REMOVED***ports.MongoClientBulkWriteError = e***REMOVED***ports.MongoClientBulkWriteCursorError = e***REMOVED***ports.MongoChangeStreamError = e***REMOVED***ports.MongoBatchReE***REMOVED***ecutionError = e***REMOVED***ports.MongoAzureError = e***REMOVED***ports.MongoAWSError = e***REMOVED***ports.MongoAPIError = e***REMOVED***ports.ChangeStreamCursor = e***REMOVED***ports.ClientEncryption = e***REMOVED***ports.MongoBulkWriteError = e***REMOVED***ports.UUID = e***REMOVED***ports.Timestamp = e***REMOVED***ports.ObjectId = e***REMOVED***ports.MinKey = e***REMOVED***ports.Ma***REMOVED***Key = e***REMOVED***ports.Long = e***REMOVED***ports.Int32 = e***REMOVED***ports.Double = e***REMOVED***ports.Decimal128 = e***REMOVED***ports.DBRef = e***REMOVED***ports.Code = e***REMOVED***ports.BSONType = e***REMOVED***ports.BSONSymbol = e***REMOVED***ports.BSONRegE***REMOVED***p = e***REMOVED***ports.Binary = e***REMOVED***ports.BSON = void 0;
e***REMOVED***ports.ConnectionClosedEvent = e***REMOVED***ports.ConnectionCheckOutStartedEvent = e***REMOVED***ports.ConnectionCheckOutFailedEvent = e***REMOVED***ports.ConnectionCheckedOutEvent = e***REMOVED***ports.ConnectionCheckedInEvent = e***REMOVED***ports.CommandSucceededEvent = e***REMOVED***ports.CommandStartedEvent = e***REMOVED***ports.CommandFailedEvent = e***REMOVED***ports.WriteConcern = e***REMOVED***ports.ReadPreference = e***REMOVED***ports.ReadConcern = e***REMOVED***ports.TopologyType = e***REMOVED***ports.ServerType = e***REMOVED***ports.ReadPreferenceMode = e***REMOVED***ports.ReadConcernLevel = e***REMOVED***ports.ProfilingLevel = e***REMOVED***ports.ReturnDocument = e***REMOVED***ports.ServerApiVersion = e***REMOVED***ports.E***REMOVED***plainVerbosity = e***REMOVED***ports.MongoErrorLabel = e***REMOVED***ports.CURSOR_FLAGS = e***REMOVED***ports.Compressor = e***REMOVED***ports.AuthMechanism = e***REMOVED***ports.GSSAPICanonicalizationValue = e***REMOVED***ports.AutoEncryptionLoggerLevel = e***REMOVED***ports.BatchType = e***REMOVED***ports.UnorderedBulkOperation = e***REMOVED***ports.OrderedBulkOperation = e***REMOVED***ports.MongoClient = e***REMOVED***ports.ListInde***REMOVED***esCursor = e***REMOVED***ports.ListCollectionsCursor = e***REMOVED***ports.GridFSBucketWriteStream = e***REMOVED***ports.GridFSBucketReadStream = e***REMOVED***ports.GridFSBucket = e***REMOVED***ports.FindCursor = e***REMOVED***ports.Db = e***REMOVED***ports.Collection = e***REMOVED***ports.ClientSession = e***REMOVED***ports.ChangeStream = e***REMOVED***ports.CancellationToken = e***REMOVED***ports.AggregationCursor = e***REMOVED***ports.Admin = e***REMOVED***ports.AbstractCursor = e***REMOVED***ports.configureE***REMOVED***plicitResourceManagement = e***REMOVED***ports.MongoWriteConcernError = e***REMOVED***ports.MongoUne***REMOVED***pectedServerResponseError = e***REMOVED***ports.MongoTransactionError = e***REMOVED***ports.MongoTopologyClosedError = e***REMOVED***ports.MongoTailableCursorError = e***REMOVED***ports.MongoSystemError = void 0;
e***REMOVED***ports.MongoClientAuthProviders = e***REMOVED***ports.MongoCryptKMSRequestNetworkTimeoutError = e***REMOVED***ports.MongoCryptInvalidArgumentError = e***REMOVED***ports.MongoCryptError = e***REMOVED***ports.MongoCryptCreateEncryptedCollectionError = e***REMOVED***ports.MongoCryptCreateDataKeyError = e***REMOVED***ports.MongoCryptAzureKMSRequestError = e***REMOVED***ports.SrvPollingEvent = e***REMOVED***ports.WaitingForSuitableServerEvent = e***REMOVED***ports.ServerSelectionSucceededEvent = e***REMOVED***ports.ServerSelectionStartedEvent = e***REMOVED***ports.ServerSelectionFailedEvent = e***REMOVED***ports.ServerSelectionEvent = e***REMOVED***ports.TopologyOpeningEvent = e***REMOVED***ports.TopologyDescriptionChangedEvent = e***REMOVED***ports.TopologyClosedEvent = e***REMOVED***ports.ServerOpeningEvent = e***REMOVED***ports.ServerHeartbeatSucceededEvent = e***REMOVED***ports.ServerHeartbeatStartedEvent = e***REMOVED***ports.ServerHeartbeatFailedEvent = e***REMOVED***ports.ServerDescriptionChangedEvent = e***REMOVED***ports.ServerClosedEvent = e***REMOVED***ports.ConnectionReadyEvent = e***REMOVED***ports.ConnectionPoolReadyEvent = e***REMOVED***ports.ConnectionPoolMonitoringEvent = e***REMOVED***ports.ConnectionPoolCreatedEvent = e***REMOVED***ports.ConnectionPoolClosedEvent = e***REMOVED***ports.ConnectionPoolClearedEvent = e***REMOVED***ports.ConnectionCreatedEvent = void 0;
const admin_1 = require("./admin");
Object.defineProperty(e***REMOVED***ports, "Admin", { enumerable: true, get: function () { return admin_1.Admin; } });
const ordered_1 = require("./bulk/ordered");
Object.defineProperty(e***REMOVED***ports, "OrderedBulkOperation", { enumerable: true, get: function () { return ordered_1.OrderedBulkOperation; } });
const unordered_1 = require("./bulk/unordered");
Object.defineProperty(e***REMOVED***ports, "UnorderedBulkOperation", { enumerable: true, get: function () { return unordered_1.UnorderedBulkOperation; } });
const change_stream_1 = require("./change_stream");
Object.defineProperty(e***REMOVED***ports, "ChangeStream", { enumerable: true, get: function () { return change_stream_1.ChangeStream; } });
const collection_1 = require("./collection");
Object.defineProperty(e***REMOVED***ports, "Collection", { enumerable: true, get: function () { return collection_1.Collection; } });
const abstract_cursor_1 = require("./cursor/abstract_cursor");
Object.defineProperty(e***REMOVED***ports, "AbstractCursor", { enumerable: true, get: function () { return abstract_cursor_1.AbstractCursor; } });
const aggregation_cursor_1 = require("./cursor/aggregation_cursor");
Object.defineProperty(e***REMOVED***ports, "AggregationCursor", { enumerable: true, get: function () { return aggregation_cursor_1.AggregationCursor; } });
const find_cursor_1 = require("./cursor/find_cursor");
Object.defineProperty(e***REMOVED***ports, "FindCursor", { enumerable: true, get: function () { return find_cursor_1.FindCursor; } });
const list_collections_cursor_1 = require("./cursor/list_collections_cursor");
Object.defineProperty(e***REMOVED***ports, "ListCollectionsCursor", { enumerable: true, get: function () { return list_collections_cursor_1.ListCollectionsCursor; } });
const list_inde***REMOVED***es_cursor_1 = require("./cursor/list_inde***REMOVED***es_cursor");
Object.defineProperty(e***REMOVED***ports, "ListInde***REMOVED***esCursor", { enumerable: true, get: function () { return list_inde***REMOVED***es_cursor_1.ListInde***REMOVED***esCursor; } });
const db_1 = require("./db");
Object.defineProperty(e***REMOVED***ports, "Db", { enumerable: true, get: function () { return db_1.Db; } });
const gridfs_1 = require("./gridfs");
Object.defineProperty(e***REMOVED***ports, "GridFSBucket", { enumerable: true, get: function () { return gridfs_1.GridFSBucket; } });
const download_1 = require("./gridfs/download");
Object.defineProperty(e***REMOVED***ports, "GridFSBucketReadStream", { enumerable: true, get: function () { return download_1.GridFSBucketReadStream; } });
const upload_1 = require("./gridfs/upload");
Object.defineProperty(e***REMOVED***ports, "GridFSBucketWriteStream", { enumerable: true, get: function () { return upload_1.GridFSBucketWriteStream; } });
const mongo_client_1 = require("./mongo_client");
Object.defineProperty(e***REMOVED***ports, "MongoClient", { enumerable: true, get: function () { return mongo_client_1.MongoClient; } });
const mongo_types_1 = require("./mongo_types");
Object.defineProperty(e***REMOVED***ports, "CancellationToken", { enumerable: true, get: function () { return mongo_types_1.CancellationToken; } });
const sessions_1 = require("./sessions");
Object.defineProperty(e***REMOVED***ports, "ClientSession", { enumerable: true, get: function () { return sessions_1.ClientSession; } });
/** @public */
var bson_1 = require("./bson");
Object.defineProperty(e***REMOVED***ports, "BSON", { enumerable: true, get: function () { return bson_1.BSON; } });
var bson_2 = require("./bson");
Object.defineProperty(e***REMOVED***ports, "Binary", { enumerable: true, get: function () { return bson_2.Binary; } });
Object.defineProperty(e***REMOVED***ports, "BSONRegE***REMOVED***p", { enumerable: true, get: function () { return bson_2.BSONRegE***REMOVED***p; } });
Object.defineProperty(e***REMOVED***ports, "BSONSymbol", { enumerable: true, get: function () { return bson_2.BSONSymbol; } });
Object.defineProperty(e***REMOVED***ports, "BSONType", { enumerable: true, get: function () { return bson_2.BSONType; } });
Object.defineProperty(e***REMOVED***ports, "Code", { enumerable: true, get: function () { return bson_2.Code; } });
Object.defineProperty(e***REMOVED***ports, "DBRef", { enumerable: true, get: function () { return bson_2.DBRef; } });
Object.defineProperty(e***REMOVED***ports, "Decimal128", { enumerable: true, get: function () { return bson_2.Decimal128; } });
Object.defineProperty(e***REMOVED***ports, "Double", { enumerable: true, get: function () { return bson_2.Double; } });
Object.defineProperty(e***REMOVED***ports, "Int32", { enumerable: true, get: function () { return bson_2.Int32; } });
Object.defineProperty(e***REMOVED***ports, "Long", { enumerable: true, get: function () { return bson_2.Long; } });
Object.defineProperty(e***REMOVED***ports, "Ma***REMOVED***Key", { enumerable: true, get: function () { return bson_2.Ma***REMOVED***Key; } });
Object.defineProperty(e***REMOVED***ports, "MinKey", { enumerable: true, get: function () { return bson_2.MinKey; } });
Object.defineProperty(e***REMOVED***ports, "ObjectId", { enumerable: true, get: function () { return bson_2.ObjectId; } });
Object.defineProperty(e***REMOVED***ports, "Timestamp", { enumerable: true, get: function () { return bson_2.Timestamp; } });
Object.defineProperty(e***REMOVED***ports, "UUID", { enumerable: true, get: function () { return bson_2.UUID; } });
var common_1 = require("./bulk/common");
Object.defineProperty(e***REMOVED***ports, "MongoBulkWriteError", { enumerable: true, get: function () { return common_1.MongoBulkWriteError; } });
var client_encryption_1 = require("./client-side-encryption/client_encryption");
Object.defineProperty(e***REMOVED***ports, "ClientEncryption", { enumerable: true, get: function () { return client_encryption_1.ClientEncryption; } });
var change_stream_cursor_1 = require("./cursor/change_stream_cursor");
Object.defineProperty(e***REMOVED***ports, "ChangeStreamCursor", { enumerable: true, get: function () { return change_stream_cursor_1.ChangeStreamCursor; } });
var error_1 = require("./error");
Object.defineProperty(e***REMOVED***ports, "MongoAPIError", { enumerable: true, get: function () { return error_1.MongoAPIError; } });
Object.defineProperty(e***REMOVED***ports, "MongoAWSError", { enumerable: true, get: function () { return error_1.MongoAWSError; } });
Object.defineProperty(e***REMOVED***ports, "MongoAzureError", { enumerable: true, get: function () { return error_1.MongoAzureError; } });
Object.defineProperty(e***REMOVED***ports, "MongoBatchReE***REMOVED***ecutionError", { enumerable: true, get: function () { return error_1.MongoBatchReE***REMOVED***ecutionError; } });
Object.defineProperty(e***REMOVED***ports, "MongoChangeStreamError", { enumerable: true, get: function () { return error_1.MongoChangeStreamError; } });
Object.defineProperty(e***REMOVED***ports, "MongoClientBulkWriteCursorError", { enumerable: true, get: function () { return error_1.MongoClientBulkWriteCursorError; } });
Object.defineProperty(e***REMOVED***ports, "MongoClientBulkWriteError", { enumerable: true, get: function () { return error_1.MongoClientBulkWriteError; } });
Object.defineProperty(e***REMOVED***ports, "MongoClientBulkWriteE***REMOVED***ecutionError", { enumerable: true, get: function () { return error_1.MongoClientBulkWriteE***REMOVED***ecutionError; } });
Object.defineProperty(e***REMOVED***ports, "MongoCompatibilityError", { enumerable: true, get: function () { return error_1.MongoCompatibilityError; } });
Object.defineProperty(e***REMOVED***ports, "MongoCursorE***REMOVED***haustedError", { enumerable: true, get: function () { return error_1.MongoCursorE***REMOVED***haustedError; } });
Object.defineProperty(e***REMOVED***ports, "MongoCursorInUseError", { enumerable: true, get: function () { return error_1.MongoCursorInUseError; } });
Object.defineProperty(e***REMOVED***ports, "MongoDecompressionError", { enumerable: true, get: function () { return error_1.MongoDecompressionError; } });
Object.defineProperty(e***REMOVED***ports, "MongoDriverError", { enumerable: true, get: function () { return error_1.MongoDriverError; } });
Object.defineProperty(e***REMOVED***ports, "MongoError", { enumerable: true, get: function () { return error_1.MongoError; } });
Object.defineProperty(e***REMOVED***ports, "MongoE***REMOVED***piredSessionError", { enumerable: true, get: function () { return error_1.MongoE***REMOVED***piredSessionError; } });
Object.defineProperty(e***REMOVED***ports, "MongoGCPError", { enumerable: true, get: function () { return error_1.MongoGCPError; } });
Object.defineProperty(e***REMOVED***ports, "MongoGridFSChunkError", { enumerable: true, get: function () { return error_1.MongoGridFSChunkError; } });
Object.defineProperty(e***REMOVED***ports, "MongoGridFSStreamError", { enumerable: true, get: function () { return error_1.MongoGridFSStreamError; } });
Object.defineProperty(e***REMOVED***ports, "MongoInvalidArgumentError", { enumerable: true, get: function () { return error_1.MongoInvalidArgumentError; } });
Object.defineProperty(e***REMOVED***ports, "MongoKerberosError", { enumerable: true, get: function () { return error_1.MongoKerberosError; } });
Object.defineProperty(e***REMOVED***ports, "MongoMissingCredentialsError", { enumerable: true, get: function () { return error_1.MongoMissingCredentialsError; } });
Object.defineProperty(e***REMOVED***ports, "MongoMissingDependencyError", { enumerable: true, get: function () { return error_1.MongoMissingDependencyError; } });
Object.defineProperty(e***REMOVED***ports, "MongoNetworkError", { enumerable: true, get: function () { return error_1.MongoNetworkError; } });
Object.defineProperty(e***REMOVED***ports, "MongoNetworkTimeoutError", { enumerable: true, get: function () { return error_1.MongoNetworkTimeoutError; } });
Object.defineProperty(e***REMOVED***ports, "MongoNotConnectedError", { enumerable: true, get: function () { return error_1.MongoNotConnectedError; } });
Object.defineProperty(e***REMOVED***ports, "MongoOIDCError", { enumerable: true, get: function () { return error_1.MongoOIDCError; } });
Object.defineProperty(e***REMOVED***ports, "MongoParseError", { enumerable: true, get: function () { return error_1.MongoParseError; } });
Object.defineProperty(e***REMOVED***ports, "MongoRuntimeError", { enumerable: true, get: function () { return error_1.MongoRuntimeError; } });
Object.defineProperty(e***REMOVED***ports, "MongoServerClosedError", { enumerable: true, get: function () { return error_1.MongoServerClosedError; } });
Object.defineProperty(e***REMOVED***ports, "MongoServerError", { enumerable: true, get: function () { return error_1.MongoServerError; } });
Object.defineProperty(e***REMOVED***ports, "MongoServerSelectionError", { enumerable: true, get: function () { return error_1.MongoServerSelectionError; } });
Object.defineProperty(e***REMOVED***ports, "MongoSystemError", { enumerable: true, get: function () { return error_1.MongoSystemError; } });
Object.defineProperty(e***REMOVED***ports, "MongoTailableCursorError", { enumerable: true, get: function () { return error_1.MongoTailableCursorError; } });
Object.defineProperty(e***REMOVED***ports, "MongoTopologyClosedError", { enumerable: true, get: function () { return error_1.MongoTopologyClosedError; } });
Object.defineProperty(e***REMOVED***ports, "MongoTransactionError", { enumerable: true, get: function () { return error_1.MongoTransactionError; } });
Object.defineProperty(e***REMOVED***ports, "MongoUne***REMOVED***pectedServerResponseError", { enumerable: true, get: function () { return error_1.MongoUne***REMOVED***pectedServerResponseError; } });
Object.defineProperty(e***REMOVED***ports, "MongoWriteConcernError", { enumerable: true, get: function () { return error_1.MongoWriteConcernError; } });
var resource_management_1 = require("./resource_management");
Object.defineProperty(e***REMOVED***ports, "configureE***REMOVED***plicitResourceManagement", { enumerable: true, get: function () { return resource_management_1.configureE***REMOVED***plicitResourceManagement; } });
// enums
var common_2 = require("./bulk/common");
Object.defineProperty(e***REMOVED***ports, "BatchType", { enumerable: true, get: function () { return common_2.BatchType; } });
var auto_encrypter_1 = require("./client-side-encryption/auto_encrypter");
Object.defineProperty(e***REMOVED***ports, "AutoEncryptionLoggerLevel", { enumerable: true, get: function () { return auto_encrypter_1.AutoEncryptionLoggerLevel; } });
var gssapi_1 = require("./cmap/auth/gssapi");
Object.defineProperty(e***REMOVED***ports, "GSSAPICanonicalizationValue", { enumerable: true, get: function () { return gssapi_1.GSSAPICanonicalizationValue; } });
var providers_1 = require("./cmap/auth/providers");
Object.defineProperty(e***REMOVED***ports, "AuthMechanism", { enumerable: true, get: function () { return providers_1.AuthMechanism; } });
var compression_1 = require("./cmap/wire_protocol/compression");
Object.defineProperty(e***REMOVED***ports, "Compressor", { enumerable: true, get: function () { return compression_1.Compressor; } });
var abstract_cursor_2 = require("./cursor/abstract_cursor");
Object.defineProperty(e***REMOVED***ports, "CURSOR_FLAGS", { enumerable: true, get: function () { return abstract_cursor_2.CURSOR_FLAGS; } });
var error_2 = require("./error");
Object.defineProperty(e***REMOVED***ports, "MongoErrorLabel", { enumerable: true, get: function () { return error_2.MongoErrorLabel; } });
var e***REMOVED***plain_1 = require("./e***REMOVED***plain");
Object.defineProperty(e***REMOVED***ports, "E***REMOVED***plainVerbosity", { enumerable: true, get: function () { return e***REMOVED***plain_1.E***REMOVED***plainVerbosity; } });
var mongo_client_2 = require("./mongo_client");
Object.defineProperty(e***REMOVED***ports, "ServerApiVersion", { enumerable: true, get: function () { return mongo_client_2.ServerApiVersion; } });
var find_and_modify_1 = require("./operations/find_and_modify");
Object.defineProperty(e***REMOVED***ports, "ReturnDocument", { enumerable: true, get: function () { return find_and_modify_1.ReturnDocument; } });
var set_profiling_level_1 = require("./operations/set_profiling_level");
Object.defineProperty(e***REMOVED***ports, "ProfilingLevel", { enumerable: true, get: function () { return set_profiling_level_1.ProfilingLevel; } });
var read_concern_1 = require("./read_concern");
Object.defineProperty(e***REMOVED***ports, "ReadConcernLevel", { enumerable: true, get: function () { return read_concern_1.ReadConcernLevel; } });
var read_preference_1 = require("./read_preference");
Object.defineProperty(e***REMOVED***ports, "ReadPreferenceMode", { enumerable: true, get: function () { return read_preference_1.ReadPreferenceMode; } });
var common_3 = require("./sdam/common");
Object.defineProperty(e***REMOVED***ports, "ServerType", { enumerable: true, get: function () { return common_3.ServerType; } });
Object.defineProperty(e***REMOVED***ports, "TopologyType", { enumerable: true, get: function () { return common_3.TopologyType; } });
// Helper classes
var read_concern_2 = require("./read_concern");
Object.defineProperty(e***REMOVED***ports, "ReadConcern", { enumerable: true, get: function () { return read_concern_2.ReadConcern; } });
var read_preference_2 = require("./read_preference");
Object.defineProperty(e***REMOVED***ports, "ReadPreference", { enumerable: true, get: function () { return read_preference_2.ReadPreference; } });
var write_concern_1 = require("./write_concern");
Object.defineProperty(e***REMOVED***ports, "WriteConcern", { enumerable: true, get: function () { return write_concern_1.WriteConcern; } });
// events
var command_monitoring_events_1 = require("./cmap/command_monitoring_events");
Object.defineProperty(e***REMOVED***ports, "CommandFailedEvent", { enumerable: true, get: function () { return command_monitoring_events_1.CommandFailedEvent; } });
Object.defineProperty(e***REMOVED***ports, "CommandStartedEvent", { enumerable: true, get: function () { return command_monitoring_events_1.CommandStartedEvent; } });
Object.defineProperty(e***REMOVED***ports, "CommandSucceededEvent", { enumerable: true, get: function () { return command_monitoring_events_1.CommandSucceededEvent; } });
var connection_pool_events_1 = require("./cmap/connection_pool_events");
Object.defineProperty(e***REMOVED***ports, "ConnectionCheckedInEvent", { enumerable: true, get: function () { return connection_pool_events_1.ConnectionCheckedInEvent; } });
Object.defineProperty(e***REMOVED***ports, "ConnectionCheckedOutEvent", { enumerable: true, get: function () { return connection_pool_events_1.ConnectionCheckedOutEvent; } });
Object.defineProperty(e***REMOVED***ports, "ConnectionCheckOutFailedEvent", { enumerable: true, get: function () { return connection_pool_events_1.ConnectionCheckOutFailedEvent; } });
Object.defineProperty(e***REMOVED***ports, "ConnectionCheckOutStartedEvent", { enumerable: true, get: function () { return connection_pool_events_1.ConnectionCheckOutStartedEvent; } });
Object.defineProperty(e***REMOVED***ports, "ConnectionClosedEvent", { enumerable: true, get: function () { return connection_pool_events_1.ConnectionClosedEvent; } });
Object.defineProperty(e***REMOVED***ports, "ConnectionCreatedEvent", { enumerable: true, get: function () { return connection_pool_events_1.ConnectionCreatedEvent; } });
Object.defineProperty(e***REMOVED***ports, "ConnectionPoolClearedEvent", { enumerable: true, get: function () { return connection_pool_events_1.ConnectionPoolClearedEvent; } });
Object.defineProperty(e***REMOVED***ports, "ConnectionPoolClosedEvent", { enumerable: true, get: function () { return connection_pool_events_1.ConnectionPoolClosedEvent; } });
Object.defineProperty(e***REMOVED***ports, "ConnectionPoolCreatedEvent", { enumerable: true, get: function () { return connection_pool_events_1.ConnectionPoolCreatedEvent; } });
Object.defineProperty(e***REMOVED***ports, "ConnectionPoolMonitoringEvent", { enumerable: true, get: function () { return connection_pool_events_1.ConnectionPoolMonitoringEvent; } });
Object.defineProperty(e***REMOVED***ports, "ConnectionPoolReadyEvent", { enumerable: true, get: function () { return connection_pool_events_1.ConnectionPoolReadyEvent; } });
Object.defineProperty(e***REMOVED***ports, "ConnectionReadyEvent", { enumerable: true, get: function () { return connection_pool_events_1.ConnectionReadyEvent; } });
var events_1 = require("./sdam/events");
Object.defineProperty(e***REMOVED***ports, "ServerClosedEvent", { enumerable: true, get: function () { return events_1.ServerClosedEvent; } });
Object.defineProperty(e***REMOVED***ports, "ServerDescriptionChangedEvent", { enumerable: true, get: function () { return events_1.ServerDescriptionChangedEvent; } });
Object.defineProperty(e***REMOVED***ports, "ServerHeartbeatFailedEvent", { enumerable: true, get: function () { return events_1.ServerHeartbeatFailedEvent; } });
Object.defineProperty(e***REMOVED***ports, "ServerHeartbeatStartedEvent", { enumerable: true, get: function () { return events_1.ServerHeartbeatStartedEvent; } });
Object.defineProperty(e***REMOVED***ports, "ServerHeartbeatSucceededEvent", { enumerable: true, get: function () { return events_1.ServerHeartbeatSucceededEvent; } });
Object.defineProperty(e***REMOVED***ports, "ServerOpeningEvent", { enumerable: true, get: function () { return events_1.ServerOpeningEvent; } });
Object.defineProperty(e***REMOVED***ports, "TopologyClosedEvent", { enumerable: true, get: function () { return events_1.TopologyClosedEvent; } });
Object.defineProperty(e***REMOVED***ports, "TopologyDescriptionChangedEvent", { enumerable: true, get: function () { return events_1.TopologyDescriptionChangedEvent; } });
Object.defineProperty(e***REMOVED***ports, "TopologyOpeningEvent", { enumerable: true, get: function () { return events_1.TopologyOpeningEvent; } });
var server_selection_events_1 = require("./sdam/server_selection_events");
Object.defineProperty(e***REMOVED***ports, "ServerSelectionEvent", { enumerable: true, get: function () { return server_selection_events_1.ServerSelectionEvent; } });
Object.defineProperty(e***REMOVED***ports, "ServerSelectionFailedEvent", { enumerable: true, get: function () { return server_selection_events_1.ServerSelectionFailedEvent; } });
Object.defineProperty(e***REMOVED***ports, "ServerSelectionStartedEvent", { enumerable: true, get: function () { return server_selection_events_1.ServerSelectionStartedEvent; } });
Object.defineProperty(e***REMOVED***ports, "ServerSelectionSucceededEvent", { enumerable: true, get: function () { return server_selection_events_1.ServerSelectionSucceededEvent; } });
Object.defineProperty(e***REMOVED***ports, "WaitingForSuitableServerEvent", { enumerable: true, get: function () { return server_selection_events_1.WaitingForSuitableServerEvent; } });
var srv_polling_1 = require("./sdam/srv_polling");
Object.defineProperty(e***REMOVED***ports, "SrvPollingEvent", { enumerable: true, get: function () { return srv_polling_1.SrvPollingEvent; } });
var errors_1 = require("./client-side-encryption/errors");
Object.defineProperty(e***REMOVED***ports, "MongoCryptAzureKMSRequestError", { enumerable: true, get: function () { return errors_1.MongoCryptAzureKMSRequestError; } });
Object.defineProperty(e***REMOVED***ports, "MongoCryptCreateDataKeyError", { enumerable: true, get: function () { return errors_1.MongoCryptCreateDataKeyError; } });
Object.defineProperty(e***REMOVED***ports, "MongoCryptCreateEncryptedCollectionError", { enumerable: true, get: function () { return errors_1.MongoCryptCreateEncryptedCollectionError; } });
Object.defineProperty(e***REMOVED***ports, "MongoCryptError", { enumerable: true, get: function () { return errors_1.MongoCryptError; } });
Object.defineProperty(e***REMOVED***ports, "MongoCryptInvalidArgumentError", { enumerable: true, get: function () { return errors_1.MongoCryptInvalidArgumentError; } });
Object.defineProperty(e***REMOVED***ports, "MongoCryptKMSRequestNetworkTimeoutError", { enumerable: true, get: function () { return errors_1.MongoCryptKMSRequestNetworkTimeoutError; } });
var mongo_client_auth_providers_1 = require("./mongo_client_auth_providers");
Object.defineProperty(e***REMOVED***ports, "MongoClientAuthProviders", { enumerable: true, get: function () { return mongo_client_auth_providers_1.MongoClientAuthProviders; } });
//# sourceMappingURL=inde***REMOVED***.js.map