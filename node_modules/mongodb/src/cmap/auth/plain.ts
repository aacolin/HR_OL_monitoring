import { Binary } from '../../bson';
import { MongoMissingCredentialsError } from '../../error';
import { ns } from '../../utils';
import { type AuthConte***REMOVED***t, AuthProvider } from './auth_provider';

e***REMOVED***port class Plain e***REMOVED***tends AuthProvider {
  override async auth(authConte***REMOVED***t: AuthConte***REMOVED***t): Promise<void> {
    const { connection, credentials } = authConte***REMOVED***t;
    if (!credentials) {
      throw new MongoMissingCredentialsError('AuthConte***REMOVED***t must provide credentials.');
    }

    const { username, password } = credentials;

    const payload = new Binary(Buffer.from(`\***REMOVED***00${username}\***REMOVED***00${password}`));
    const command = {
      saslStart: 1,
      mechanism: 'PLAIN',
      payload: payload,
      autoAuthorize: 1
    };

    await connection.command(ns('$e***REMOVED***ternal.$cmd'), command, undefined);
  }
}
