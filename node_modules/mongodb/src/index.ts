import { Admin } from './admin';
import { OrderedBulkOperation } from './bulk/ordered';
import { UnorderedBulkOperation } from './bulk/unordered';
import { ChangeStream } from './change_stream';
import { Collection } from './collection';
import { AbstractCursor } from './cursor/abstract_cursor';
import { AggregationCursor } from './cursor/aggregation_cursor';
import { FindCursor } from './cursor/find_cursor';
import { ListCollectionsCursor } from './cursor/list_collections_cursor';
import { ListInde***REMOVED***esCursor } from './cursor/list_inde***REMOVED***es_cursor';
import type { RunCommandCursor } from './cursor/run_command_cursor';
import { Db } from './db';
import { GridFSBucket } from './gridfs';
import { GridFSBucketReadStream } from './gridfs/download';
import { GridFSBucketWriteStream } from './gridfs/upload';
import { MongoClient } from './mongo_client';
import { CancellationToken } from './mongo_types';
import { ClientSession } from './sessions';

/** @public */
e***REMOVED***port { BSON } from './bson';
e***REMOVED***port {
  Binary,
  BSONRegE***REMOVED***p,
  BSONSymbol,
  BSONType,
  Code,
  DBRef,
  Decimal128,
  Double,
  Int32,
  Long,
  Ma***REMOVED***Key,
  MinKey,
  ObjectId,
  Timestamp,
  UUID
} from './bson';
e***REMOVED***port { AnyBulkWriteOperation, BulkWriteOptions, MongoBulkWriteError } from './bulk/common';
e***REMOVED***port { ClientEncryption } from './client-side-encryption/client_encryption';
e***REMOVED***port { ChangeStreamCursor } from './cursor/change_stream_cursor';
e***REMOVED***port {
  MongoAPIError,
  MongoAWSError,
  MongoAzureError,
  MongoBatchReE***REMOVED***ecutionError,
  MongoChangeStreamError,
  MongoClientBulkWriteCursorError,
  MongoClientBulkWriteError,
  MongoClientBulkWriteE***REMOVED***ecutionError,
  MongoCompatibilityError,
  MongoCursorE***REMOVED***haustedError,
  MongoCursorInUseError,
  MongoDecompressionError,
  MongoDriverError,
  MongoError,
  MongoE***REMOVED***piredSessionError,
  MongoGCPError,
  MongoGridFSChunkError,
  MongoGridFSStreamError,
  MongoInvalidArgumentError,
  MongoKerberosError,
  MongoMissingCredentialsError,
  MongoMissingDependencyError,
  MongoNetworkError,
  MongoNetworkTimeoutError,
  MongoNotConnectedError,
  MongoOIDCError,
  MongoParseError,
  MongoRuntimeError,
  MongoServerClosedError,
  MongoServerError,
  MongoServerSelectionError,
  MongoSystemError,
  MongoTailableCursorError,
  MongoTopologyClosedError,
  MongoTransactionError,
  MongoUne***REMOVED***pectedServerResponseError,
  MongoWriteConcernError,
  WriteConcernErrorResult
} from './error';
e***REMOVED***port { configureE***REMOVED***plicitResourceManagement } from './resource_management';
e***REMOVED***port {
  AbstractCursor,
  // Actual driver classes e***REMOVED***ported
  Admin,
  AggregationCursor,
  CancellationToken,
  ChangeStream,
  ClientSession,
  Collection,
  Db,
  FindCursor,
  GridFSBucket,
  GridFSBucketReadStream,
  GridFSBucketWriteStream,
  ListCollectionsCursor,
  ListInde***REMOVED***esCursor,
  MongoClient,
  OrderedBulkOperation,
  RunCommandCursor,
  UnorderedBulkOperation
};

// enums
e***REMOVED***port { BatchType } from './bulk/common';
e***REMOVED***port { AutoEncryptionLoggerLevel } from './client-side-encryption/auto_encrypter';
e***REMOVED***port { GSSAPICanonicalizationValue } from './cmap/auth/gssapi';
e***REMOVED***port { AuthMechanism } from './cmap/auth/providers';
e***REMOVED***port { Compressor } from './cmap/wire_protocol/compression';
e***REMOVED***port { CURSOR_FLAGS } from './cursor/abstract_cursor';
e***REMOVED***port { MongoErrorLabel } from './error';
e***REMOVED***port { E***REMOVED***plainVerbosity } from './e***REMOVED***plain';
e***REMOVED***port { ServerApiVersion } from './mongo_client';
e***REMOVED***port { ReturnDocument } from './operations/find_and_modify';
e***REMOVED***port { ProfilingLevel } from './operations/set_profiling_level';
e***REMOVED***port { ReadConcernLevel } from './read_concern';
e***REMOVED***port { ReadPreferenceMode } from './read_preference';
e***REMOVED***port { ServerType, TopologyType } from './sdam/common';

// Helper classes
e***REMOVED***port { ReadConcern } from './read_concern';
e***REMOVED***port { ReadPreference } from './read_preference';
e***REMOVED***port { WriteConcern } from './write_concern';

// events
e***REMOVED***port {
  CommandFailedEvent,
  CommandStartedEvent,
  CommandSucceededEvent
} from './cmap/command_monitoring_events';
e***REMOVED***port {
  ConnectionCheckedInEvent,
  ConnectionCheckedOutEvent,
  ConnectionCheckOutFailedEvent,
  ConnectionCheckOutStartedEvent,
  ConnectionClosedEvent,
  ConnectionCreatedEvent,
  ConnectionPoolClearedEvent,
  ConnectionPoolClosedEvent,
  ConnectionPoolCreatedEvent,
  ConnectionPoolMonitoringEvent,
  ConnectionPoolReadyEvent,
  ConnectionReadyEvent
} from './cmap/connection_pool_events';
e***REMOVED***port {
  ServerClosedEvent,
  ServerDescriptionChangedEvent,
  ServerHeartbeatFailedEvent,
  ServerHeartbeatStartedEvent,
  ServerHeartbeatSucceededEvent,
  ServerOpeningEvent,
  TopologyClosedEvent,
  TopologyDescriptionChangedEvent,
  TopologyOpeningEvent
} from './sdam/events';
e***REMOVED***port {
  ServerSelectionEvent,
  ServerSelectionFailedEvent,
  ServerSelectionStartedEvent,
  ServerSelectionSucceededEvent,
  WaitingForSuitableServerEvent
} from './sdam/server_selection_events';
e***REMOVED***port { SrvPollingEvent } from './sdam/srv_polling';

// type only e***REMOVED***ports below, these are removed from emitted JS
e***REMOVED***port type { AdminPrivate } from './admin';
e***REMOVED***port type { BSONElement, BSONSerializeOptions, Document } from './bson';
e***REMOVED***port type { deserialize, serialize } from './bson';
e***REMOVED***port type {
  BulkResult,
  BulkWriteOperationError,
  BulkWriteResult,
  DeleteManyModel,
  DeleteOneModel,
  InsertOneModel,
  ReplaceOneModel,
  UpdateManyModel,
  UpdateOneModel,
  WriteConcernError,
  WriteError
} from './bulk/common';
e***REMOVED***port type {
  Batch,
  BulkOperationBase,
  BulkOperationPrivate,
  FindOperators,
  WriteConcernErrorData
} from './bulk/common';
e***REMOVED***port type {
  ChangeStreamCollModDocument,
  ChangeStreamCreateDocument,
  ChangeStreamCreateInde***REMOVED***Document,
  ChangeStreamDeleteDocument,
  ChangeStreamDocument,
  ChangeStreamDocumentCollectionUUID,
  ChangeStreamDocumentCommon,
  ChangeStreamDocumentKey,
  ChangeStreamDocumentOperationDescription,
  ChangeStreamDropDatabaseDocument,
  ChangeStreamDropDocument,
  ChangeStreamDropInde***REMOVED***Document,
  ChangeStreamEvents,
  ChangeStreamInsertDocument,
  ChangeStreamInvalidateDocument,
  ChangeStreamNameSpace,
  ChangeStreamOptions,
  ChangeStreamRefineCollectionShardKeyDocument,
  ChangeStreamRenameDocument,
  ChangeStreamReplaceDocument,
  ChangeStreamReshardCollectionDocument,
  ChangeStreamShardCollectionDocument,
  ChangeStreamSplitEvent,
  ChangeStreamUpdateDocument,
  OperationTime,
  ResumeOptions,
  ResumeToken,
  UpdateDescription
} from './change_stream';
e***REMOVED***port type { AutoEncrypter } from './client-side-encryption/auto_encrypter';
e***REMOVED***port type { AutoEncryptionOptions } from './client-side-encryption/auto_encrypter';
e***REMOVED***port type { AutoEncryptionE***REMOVED***traOptions } from './client-side-encryption/auto_encrypter';
e***REMOVED***port type {
  AWSEncryptionKeyOptions,
  AzureEncryptionKeyOptions,
  ClientEncryptionCreateDataKeyProviderOptions,
  ClientEncryptionEncryptOptions,
  ClientEncryptionOptions,
  ClientEncryptionRewrapManyDataKeyProviderOptions,
  ClientEncryptionRewrapManyDataKeyResult,
  DataKey,
  GCPEncryptionKeyOptions,
  KMIPEncryptionKeyOptions,
  RangeOptions
} from './client-side-encryption/client_encryption';
e***REMOVED***port {
  MongoCryptAzureKMSRequestError,
  MongoCryptCreateDataKeyError,
  MongoCryptCreateEncryptedCollectionError,
  MongoCryptError,
  MongoCryptInvalidArgumentError,
  MongoCryptKMSRequestNetworkTimeoutError
} from './client-side-encryption/errors';
e***REMOVED***port type { MongocryptdManager } from './client-side-encryption/mongocryptd_manager';
e***REMOVED***port type {
  AWSKMSProviderConfiguration,
  AzureKMSProviderConfiguration,
  ClientEncryptionDataKeyProvider,
  GCPKMSProviderConfiguration,
  KMIPKMSProviderConfiguration,
  KMSProviders,
  LocalKMSProviderConfiguration
} from './client-side-encryption/providers/inde***REMOVED***';
e***REMOVED***port type {
  ClientEncryptionSocketOptions,
  ClientEncryptionTlsOptions,
  CSFLEKMSTlsOptions,
  StateMachineE***REMOVED***ecutable
} from './client-side-encryption/state_machine';
e***REMOVED***port type { AuthConte***REMOVED***t, AuthProvider } from './cmap/auth/auth_provider';
e***REMOVED***port type {
  AuthMechanismProperties,
  MongoCredentials,
  MongoCredentialsOptions
} from './cmap/auth/mongo_credentials';
e***REMOVED***port type {
  IdPInfo,
  IdPServerResponse,
  OIDCCallbackFunction,
  OIDCCallbackParams,
  OIDCResponse
} from './cmap/auth/mongodb_oidc';
e***REMOVED***port type { Workflow } from './cmap/auth/mongodb_oidc';
e***REMOVED***port type { TokenCache } from './cmap/auth/mongodb_oidc/token_cache';
e***REMOVED***port type {
  MessageHeader,
  OpCompressedRequest,
  OpMsgOptions,
  OpMsgRequest,
  OpMsgResponse,
  OpQueryOptions,
  OpQueryRequest,
  OpReply,
  WriteProtocolMessageType
} from './cmap/commands';
e***REMOVED***port type { HandshakeDocument } from './cmap/connect';
e***REMOVED***port type { LEGAL_TCP_SOCKET_OPTIONS, LEGAL_TLS_SOCKET_OPTIONS, Stream } from './cmap/connect';
e***REMOVED***port type {
  CommandOptions,
  Connection,
  ConnectionEvents,
  ConnectionOptions,
  Pro***REMOVED***yOptions
} from './cmap/connection';
e***REMOVED***port type {
  CloseOptions,
  ConnectionPool,
  ConnectionPoolEvents,
  ConnectionPoolOptions,
  PoolState,
  WaitQueueMember,
  WithConnectionCallback
} from './cmap/connection_pool';
e***REMOVED***port type { ClientMetadata, ClientMetadataOptions } from './cmap/handshake/client_metadata';
e***REMOVED***port type { ConnectionPoolMetrics } from './cmap/metrics';
e***REMOVED***port type { StreamDescription, StreamDescriptionOptions } from './cmap/stream_description';
e***REMOVED***port type { CompressorName } from './cmap/wire_protocol/compression';
e***REMOVED***port type {
  JSTypeOf,
  OnDemandDocument,
  OnDemandDocumentDeserializeOptions
} from './cmap/wire_protocol/on_demand/document';
e***REMOVED***port type {
  CursorResponse,
  MongoDBResponse,
  MongoDBResponseConstructor
} from './cmap/wire_protocol/responses';
e***REMOVED***port type {
  CollectionOptions,
  CollectionPrivate,
  CountDocumentsOptions,
  ModifyResult
} from './collection';
e***REMOVED***port type {
  COMMAND_FAILED,
  COMMAND_STARTED,
  COMMAND_SUCCEEDED,
  CONNECTION_CHECK_OUT_FAILED,
  CONNECTION_CHECK_OUT_STARTED,
  CONNECTION_CHECKED_IN,
  CONNECTION_CHECKED_OUT,
  CONNECTION_CLOSED,
  CONNECTION_CREATED,
  CONNECTION_POOL_CLEARED,
  CONNECTION_POOL_CLOSED,
  CONNECTION_POOL_CREATED,
  CONNECTION_POOL_READY,
  CONNECTION_READY,
  MONGO_CLIENT_EVENTS,
  SERVER_CLOSED,
  SERVER_DESCRIPTION_CHANGED,
  SERVER_HEARTBEAT_FAILED,
  SERVER_HEARTBEAT_STARTED,
  SERVER_HEARTBEAT_SUCCEEDED,
  SERVER_OPENING,
  SERVER_SELECTION_FAILED,
  SERVER_SELECTION_STARTED,
  SERVER_SELECTION_SUCCEEDED,
  TOPOLOGY_CLOSED,
  TOPOLOGY_DESCRIPTION_CHANGED,
  TOPOLOGY_OPENING,
  WAITING_FOR_SUITABLE_SERVER
} from './constants';
e***REMOVED***port type {
  AbstractCursorEvents,
  AbstractCursorOptions,
  CursorFlag,
  CursorStreamOptions
} from './cursor/abstract_cursor';
e***REMOVED***port type {
  InitialCursorResponse,
  InternalAbstractCursorOptions
} from './cursor/abstract_cursor';
e***REMOVED***port type { AggregationCursorOptions } from './cursor/aggregation_cursor';
e***REMOVED***port type { ChangeStreamCursorOptions } from './cursor/change_stream_cursor';
e***REMOVED***port type {
  ListSearchInde***REMOVED***esCursor,
  ListSearchInde***REMOVED***esOptions
} from './cursor/list_search_inde***REMOVED***es_cursor';
e***REMOVED***port type { RunCursorCommandOptions } from './cursor/run_command_cursor';
e***REMOVED***port type { DbOptions, DbPrivate } from './db';
e***REMOVED***port type { Encrypter, EncrypterOptions } from './encrypter';
e***REMOVED***port type { AnyError, ErrorDescription, MongoNetworkErrorOptions } from './error';
e***REMOVED***port type {
  E***REMOVED***plain,
  E***REMOVED***plainCommandOptions,
  E***REMOVED***plainOptions,
  E***REMOVED***plainVerbosityLike
} from './e***REMOVED***plain';
e***REMOVED***port type {
  GridFSBucketReadStreamOptions,
  GridFSBucketReadStreamOptionsWithRevision,
  GridFSBucketReadStreamPrivate,
  GridFSFile
} from './gridfs/download';
e***REMOVED***port type { GridFSBucketEvents, GridFSBucketOptions, GridFSBucketPrivate } from './gridfs/inde***REMOVED***';
e***REMOVED***port type { GridFSBucketWriteStreamOptions, GridFSChunk } from './gridfs/upload';
e***REMOVED***port type {
  Auth,
  DriverInfo,
  MongoClientEvents,
  MongoClientOptions,
  MongoClientPrivate,
  MongoOptions,
  PkFactory,
  ServerApi,
  SupportedNodeConnectionOptions,
  SupportedSocketOptions,
  SupportedTLSConnectionOptions,
  SupportedTLSSocketOptions,
  WithSessionCallback
} from './mongo_client';
e***REMOVED***port { MongoClientAuthProviders } from './mongo_client_auth_providers';
e***REMOVED***port type {
  Log,
  LogComponentSeveritiesClientOptions,
  LogConvertible,
  Loggable,
  LoggableCommandFailedEvent,
  LoggableCommandSucceededEvent,
  LoggableEvent,
  LoggableServerHeartbeatFailedEvent,
  LoggableServerHeartbeatStartedEvent,
  LoggableServerHeartbeatSucceededEvent,
  MongoDBLogWritable,
  MongoLoggableComponent,
  MongoLogger,
  MongoLoggerEnvOptions,
  MongoLoggerMongoClientOptions,
  MongoLoggerOptions,
  SeverityLevel
} from './mongo_logger';
e***REMOVED***port type {
  CommonEvents,
  EventsDescription,
  GenericListener,
  TypedEventEmitter
} from './mongo_types';
e***REMOVED***port type {
  AcceptedFields,
  AddToSetOperators,
  AlternativeType,
  ArrayElement,
  ArrayOperator,
  BitwiseFilter,
  BSONTypeAlias,
  Condition,
  EnhancedOmit,
  Filter,
  FilterOperations,
  FilterOperators,
  Flatten,
  InferIdType,
  IntegerType,
  IsAny,
  Join,
  KeysOfAType,
  KeysOfOtherType,
  MatchKeysAndValues,
  NestedPaths,
  NestedPathsOfType,
  NonObjectIdLikeDocument,
  NotAcceptedFields,
  NumericType,
  OneOrMore,
  OnlyFieldsOfType,
  OptionalId,
  OptionalUnlessRequiredId,
  PropertyType,
  PullAllOperator,
  PullOperator,
  PushOperator,
  RegE***REMOVED***pOrString,
  RootFilterOperators,
  SchemaMember,
  SetFields,
  StrictFilter,
  StrictMatchKeysAndValues,
  StrictUpdateFilter,
  UpdateFilter,
  WithId,
  WithoutId
} from './mongo_types';
e***REMOVED***port type {
  AggregateOperation,
  AggregateOptions,
  DB_AGGREGATE_COLLECTION
} from './operations/aggregate';
e***REMOVED***port type {
  AnyClientBulkWriteModel,
  ClientBulkWriteError,
  ClientBulkWriteModel,
  ClientBulkWriteOptions,
  ClientBulkWriteResult,
  ClientDeleteManyModel,
  ClientDeleteOneModel,
  ClientDeleteResult,
  ClientInsertOneModel,
  ClientInsertOneResult,
  ClientReplaceOneModel,
  ClientUpdateManyModel,
  ClientUpdateOneModel,
  ClientUpdateResult,
  ClientWriteModel
} from './operations/client_bulk_write/common';
e***REMOVED***port type {
  CollationOptions,
  CommandOperation,
  CommandOperationOptions,
  OperationParent
} from './operations/command';
e***REMOVED***port type { CountOptions } from './operations/count';
e***REMOVED***port type {
  ClusteredCollectionOptions,
  CreateCollectionOptions,
  TimeSeriesCollectionOptions
} from './operations/create_collection';
e***REMOVED***port type { DeleteOptions, DeleteResult, DeleteStatement } from './operations/delete';
e***REMOVED***port type { DistinctOptions } from './operations/distinct';
e***REMOVED***port type { DropCollectionOptions, DropDatabaseOptions } from './operations/drop';
e***REMOVED***port type { EstimatedDocumentCountOptions } from './operations/estimated_document_count';
e***REMOVED***port type { FindOptions } from './operations/find';
e***REMOVED***port type {
  FindOneAndDeleteOptions,
  FindOneAndReplaceOptions,
  FindOneAndUpdateOptions
} from './operations/find_and_modify';
e***REMOVED***port type { Inde***REMOVED***InformationOptions } from './operations/inde***REMOVED***es';
e***REMOVED***port type {
  CreateInde***REMOVED***esOptions,
  DropInde***REMOVED***esOptions,
  Inde***REMOVED***Description,
  Inde***REMOVED***DescriptionCompact,
  Inde***REMOVED***DescriptionInfo,
  Inde***REMOVED***Direction,
  Inde***REMOVED***Specification,
  ListInde***REMOVED***esOptions
} from './operations/inde***REMOVED***es';
e***REMOVED***port type { InsertManyResult, InsertOneOptions, InsertOneResult } from './operations/insert';
e***REMOVED***port type { CollectionInfo, ListCollectionsOptions } from './operations/list_collections';
e***REMOVED***port type { ListDatabasesOptions, ListDatabasesResult } from './operations/list_databases';
e***REMOVED***port type { AbstractOperation, Hint, OperationOptions } from './operations/operation';
e***REMOVED***port type { ProfilingLevelOptions } from './operations/profiling_level';
e***REMOVED***port type { RemoveUserOptions } from './operations/remove_user';
e***REMOVED***port type { RenameOptions } from './operations/rename';
e***REMOVED***port type { RunCommandOptions } from './operations/run_command';
e***REMOVED***port type { SearchInde***REMOVED***Description } from './operations/search_inde***REMOVED***es/create';
e***REMOVED***port type { SetProfilingLevelOptions } from './operations/set_profiling_level';
e***REMOVED***port type { DbStatsOptions } from './operations/stats';
e***REMOVED***port type {
  ReplaceOptions,
  UpdateOptions,
  UpdateResult,
  UpdateStatement
} from './operations/update';
e***REMOVED***port type { ValidateCollectionOptions } from './operations/validate_collection';
e***REMOVED***port type { ReadConcernLike } from './read_concern';
e***REMOVED***port type {
  HedgeOptions,
  ReadPreferenceFromOptions,
  ReadPreferenceLike,
  ReadPreferenceLikeOptions,
  ReadPreferenceOptions
} from './read_preference';
e***REMOVED***port type { AsyncDisposable } from './resource_management';
e***REMOVED***port type { ClusterTime, TimerQueue } from './sdam/common';
e***REMOVED***port type {
  Monitor,
  MonitorEvents,
  MonitorInterval,
  MonitorIntervalOptions,
  MonitorOptions,
  MonitorPrivate,
  RTTPinger,
  RTTPingerOptions,
  RTTSampler,
  ServerMonitoringMode
} from './sdam/monitor';
e***REMOVED***port type { Server, ServerEvents, ServerOptions, ServerPrivate } from './sdam/server';
e***REMOVED***port type {
  ServerDescription,
  ServerDescriptionOptions,
  TagSet,
  TopologyVersion
} from './sdam/server_description';
e***REMOVED***port type { ServerSelector } from './sdam/server_selection';
e***REMOVED***port type { SrvPoller, SrvPollerEvents, SrvPollerOptions } from './sdam/srv_polling';
e***REMOVED***port type {
  ConnectOptions,
  SelectServerOptions,
  ServerCapabilities,
  ServerSelectionCallback,
  ServerSelectionRequest,
  Topology,
  TopologyEvents,
  TopologyOptions,
  TopologyPrivate
} from './sdam/topology';
e***REMOVED***port type { TopologyDescription, TopologyDescriptionOptions } from './sdam/topology_description';
e***REMOVED***port type {
  ClientSessionEvents,
  ClientSessionOptions,
  EndSessionOptions,
  ServerSession,
  ServerSessionId,
  ServerSessionPool,
  WithTransactionCallback
} from './sessions';
e***REMOVED***port type { Sort, SortDirection, SortDirectionForCmd, SortForCmd } from './sort';
e***REMOVED***port type { Timeout } from './timeout';
e***REMOVED***port type { Transaction, TransactionOptions, T***REMOVED***nState } from './transactions';
e***REMOVED***port type {
  BufferPool,
  Callback,
  EventEmitterWithState,
  HostAddress,
  List,
  MongoDBCollectionNamespace,
  MongoDBNamespace
} from './utils';
e***REMOVED***port type { W, WriteConcernOptions, WriteConcernSettings } from './write_concern';
