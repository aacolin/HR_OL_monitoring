'use strict';

const clone = require('./clone');
const MongooseError = require('../error/inde***REMOVED***');

function processConnectionOptions(uri, options) {
  const opts = options ? options : {};
  const readPreference = opts.readPreference
    ? opts.readPreference
    : getUriReadPreference(uri);

  const clonedOpts = clone(opts);
  const resolvedOpts = (readPreference && readPreference !== 'primary' && readPreference !== 'primaryPreferred')
    ? resolveOptsConflicts(readPreference, clonedOpts)
    : clonedOpts;

  return resolvedOpts;
}

function resolveOptsConflicts(pref, opts) {
  // don't silently override user-provided inde***REMOVED***ing options
  if (setsInde***REMOVED***Options(opts) && setsSecondaryRead(pref)) {
    throwReadPreferenceError();
  }

  // if user has not e***REMOVED***plicitly set any auto-inde***REMOVED***ing options,
  // we can silently default them all to false
  else {
    return defaultInde***REMOVED***OptsToFalse(opts);
  }
}

function setsInde***REMOVED***Options(opts) {
  const configId***REMOVED*** = opts.config && opts.config.autoInde***REMOVED***;
  const { autoCreate, autoInde***REMOVED*** } = opts;
  return !!(configId***REMOVED*** || autoCreate || autoInde***REMOVED***);
}

function setsSecondaryRead(prefString) {
  return !!(prefString === 'secondary' || prefString === 'secondaryPreferred');
}

function getUriReadPreference(connectionString) {
  const e***REMOVED***p = /(?:&|\?)readPreference=(\w+)(?:&|$)/;
  const match = e***REMOVED***p.e***REMOVED***ec(connectionString);
  return match ? match[1] : null;
}

function defaultInde***REMOVED***OptsToFalse(opts) {
  opts.config = { autoInde***REMOVED***: false };
  opts.autoCreate = false;
  opts.autoInde***REMOVED*** = false;
  return opts;
}

function throwReadPreferenceError() {
  throw new MongooseError(
    'MongoDB prohibits inde***REMOVED*** creation on connections that read from ' +
            'non-primary replicas.  Connections that set "readPreference" to "secondary" or ' +
            '"secondaryPreferred" may not opt-in to the following connection options: ' +
            'autoCreate, autoInde***REMOVED***'
  );
}

module.e***REMOVED***ports = processConnectionOptions;
