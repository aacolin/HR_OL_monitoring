/*!
 * is-glob <https://github.com/jonschlinkert/is-glob>
 *
 * Copyright (c) 2014-2017, Jon Schlinkert.
 * Released under the MIT License.
 */

var isE***REMOVED***tglob = require('is-e***REMOVED***tglob');
var chars = { '{': '}', '(': ')', '[': ']'};
var strictCheck = function(str) {
  if (str[0] === '!') {
    return true;
  }
  var inde***REMOVED*** = 0;
  var pipeInde***REMOVED*** = -2;
  var closeSquareInde***REMOVED*** = -2;
  var closeCurlyInde***REMOVED*** = -2;
  var closeParenInde***REMOVED*** = -2;
  var backSlashInde***REMOVED*** = -2;
  while (inde***REMOVED*** < str.length) {
    if (str[inde***REMOVED***] === '*') {
      return true;
    }

    if (str[inde***REMOVED*** + 1] === '?' && /[\].+)]/.test(str[inde***REMOVED***])) {
      return true;
    }

    if (closeSquareInde***REMOVED*** !== -1 && str[inde***REMOVED***] === '[' && str[inde***REMOVED*** + 1] !== ']') {
      if (closeSquareInde***REMOVED*** < inde***REMOVED***) {
        closeSquareInde***REMOVED*** = str.inde***REMOVED***Of(']', inde***REMOVED***);
      }
      if (closeSquareInde***REMOVED*** > inde***REMOVED***) {
        if (backSlashInde***REMOVED*** === -1 || backSlashInde***REMOVED*** > closeSquareInde***REMOVED***) {
          return true;
        }
        backSlashInde***REMOVED*** = str.inde***REMOVED***Of('\\', inde***REMOVED***);
        if (backSlashInde***REMOVED*** === -1 || backSlashInde***REMOVED*** > closeSquareInde***REMOVED***) {
          return true;
        }
      }
    }

    if (closeCurlyInde***REMOVED*** !== -1 && str[inde***REMOVED***] === '{' && str[inde***REMOVED*** + 1] !== '}') {
      closeCurlyInde***REMOVED*** = str.inde***REMOVED***Of('}', inde***REMOVED***);
      if (closeCurlyInde***REMOVED*** > inde***REMOVED***) {
        backSlashInde***REMOVED*** = str.inde***REMOVED***Of('\\', inde***REMOVED***);
        if (backSlashInde***REMOVED*** === -1 || backSlashInde***REMOVED*** > closeCurlyInde***REMOVED***) {
          return true;
        }
      }
    }

    if (closeParenInde***REMOVED*** !== -1 && str[inde***REMOVED***] === '(' && str[inde***REMOVED*** + 1] === '?' && /[:!=]/.test(str[inde***REMOVED*** + 2]) && str[inde***REMOVED*** + 3] !== ')') {
      closeParenInde***REMOVED*** = str.inde***REMOVED***Of(')', inde***REMOVED***);
      if (closeParenInde***REMOVED*** > inde***REMOVED***) {
        backSlashInde***REMOVED*** = str.inde***REMOVED***Of('\\', inde***REMOVED***);
        if (backSlashInde***REMOVED*** === -1 || backSlashInde***REMOVED*** > closeParenInde***REMOVED***) {
          return true;
        }
      }
    }

    if (pipeInde***REMOVED*** !== -1 && str[inde***REMOVED***] === '(' && str[inde***REMOVED*** + 1] !== '|') {
      if (pipeInde***REMOVED*** < inde***REMOVED***) {
        pipeInde***REMOVED*** = str.inde***REMOVED***Of('|', inde***REMOVED***);
      }
      if (pipeInde***REMOVED*** !== -1 && str[pipeInde***REMOVED*** + 1] !== ')') {
        closeParenInde***REMOVED*** = str.inde***REMOVED***Of(')', pipeInde***REMOVED***);
        if (closeParenInde***REMOVED*** > pipeInde***REMOVED***) {
          backSlashInde***REMOVED*** = str.inde***REMOVED***Of('\\', pipeInde***REMOVED***);
          if (backSlashInde***REMOVED*** === -1 || backSlashInde***REMOVED*** > closeParenInde***REMOVED***) {
            return true;
          }
        }
      }
    }

    if (str[inde***REMOVED***] === '\\') {
      var open = str[inde***REMOVED*** + 1];
      inde***REMOVED*** += 2;
      var close = chars[open];

      if (close) {
        var n = str.inde***REMOVED***Of(close, inde***REMOVED***);
        if (n !== -1) {
          inde***REMOVED*** = n + 1;
        }
      }

      if (str[inde***REMOVED***] === '!') {
        return true;
      }
    } else {
      inde***REMOVED***++;
    }
  }
  return false;
};

var rela***REMOVED***edCheck = function(str) {
  if (str[0] === '!') {
    return true;
  }
  var inde***REMOVED*** = 0;
  while (inde***REMOVED*** < str.length) {
    if (/[*?{}()[\]]/.test(str[inde***REMOVED***])) {
      return true;
    }

    if (str[inde***REMOVED***] === '\\') {
      var open = str[inde***REMOVED*** + 1];
      inde***REMOVED*** += 2;
      var close = chars[open];

      if (close) {
        var n = str.inde***REMOVED***Of(close, inde***REMOVED***);
        if (n !== -1) {
          inde***REMOVED*** = n + 1;
        }
      }

      if (str[inde***REMOVED***] === '!') {
        return true;
      }
    } else {
      inde***REMOVED***++;
    }
  }
  return false;
};

module.e***REMOVED***ports = function isGlob(str, options) {
  if (typeof str !== 'string' || str === '') {
    return false;
  }

  if (isE***REMOVED***tglob(str)) {
    return true;
  }

  var check = strictCheck;

  // optionally rela***REMOVED*** check
  if (options && options.strict === false) {
    check = rela***REMOVED***edCheck;
  }

  return check(str);
};
