TCPClient client;                           	// Create TCP Client object
byte server[] = { 185, 176, 40, 75 }; 		// http://maker-io-iot.atwebpages.com/
byte dataBuffer[1024];
 
String receivedData;
 
void setup() 
{
    Serial.begin(9600);
}
 
 
void loop() 
{
    // GET Message
    if(client.connect(server, 80))
    {
        // Print some information that we have connected to the server
        Serial.println("**********************************!");
        Serial.println("New GET Connection!");
        Serial.println("Connection OK!");
                
        // Send our HTTP data!
        client.println("GET /dataValue.html HTTP/1.0");
        client.println("Host: maker-io-iot.atwebpages.com");
        client.println();
        
        receivedData = "";
 
        // Read data from the buffer
        
        while(receivedData.inde***REMOVED***Of("\r\n\r\n") == -1)
        {
            memset(dataBuffer, 0***REMOVED***00, sizeof(dataBuffer));
            client.read(dataBuffer, sizeof(dataBuffer));
            receivedData += (const char*)dataBuffer;
        }
        
        // Print the string
        Serial.println(receivedData);
 
        // Stop the current connection
        client.stop();
    }  
    else
    {
        Serial.println("Server connection failed. Trying again...");
    }
    
    
    // POST Message
    if(client.connect(server, 80))
    {
        // Print some information that we have connected to the server
        Serial.println("**********************************!");
        Serial.println("New POST Connection!");
        Serial.println("Connection OK!");
                
        // Send our HTTP data!
        client.println("POST /submit.php HTTP/1.0");
        client.println("Host: maker-io-iot.atwebpages.com");
        client.println("Content-Type: application/***REMOVED***-www-form-urlencoded");
        client.println("Content-Length: 9");
        client.println();
        client.print("number=10");
        
        receivedData = "";
 
        // Read data from the buffer
        
        while(receivedData.inde***REMOVED***Of("\r\n\r\n") == -1)
        {
            memset(dataBuffer, 0***REMOVED***00, sizeof(dataBuffer));
            client.read(dataBuffer, sizeof(dataBuffer));
            receivedData += (const char*)dataBuffer;
        }
        
        // Print the string
        Serial.println(receivedData);
 
        // Stop the current connection
        client.stop();
    }  
    else
    {
        Serial.println("Server connection failed. Trying again...");
    }    
    
    delay(1000);
}
